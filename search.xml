<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023-4-10</title>
    <url>/posts/dfecc98.html</url>
    <content><![CDATA[<h1>2023-4-10</h1>
<p>  考研复试成绩出来已经近半个月了，这期间我尝试提前联系导师，但没有一个明确给我名额的，作罢。</p>
<p>  也试过去找专业相关的实习，去年毕业的时候我没参与过招聘会，也没自己找过实习，对目前的就业形势只有耳闻而不知详况，这几天才知道何其困难。</p>
<p>  最后还是在家附近找了个接听电话的活计，脱产一整年，就算有出去游玩的打算也得先挣点钱呀。<br>
​<br>
  说起旅行，此前我也与朋友提过，朋友在江苏，我记起一句“姑苏城外寒山寺”，便言，不若此行终点便定在寒山寺吧。又闻“兰亭临帖，行书如行云流水”，似乎兰亭所在也与那处不远，沿途也走这兰亭一遭。</p>
<p>  在地图上标好了两处目的地，发现从武汉出发，恰经黄山，又顺手将其加入了行程。这样一来，我的旅行计划算是有了雏形，现在差的恐怕也就属钱最费时了。</p>
<p>  此行本没考虑过旅伴，但若真的孤身出行，恐怕难免还会有些不便或寂寞？亦或又是别有一番滋味在其中？</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>2023-5-12</title>
    <url>/posts/1eaa0e58.html</url>
    <content><![CDATA[<h1>2023-5-12</h1>
<p>  已有一月未落笔了，这一个月来倒也算得上丰富多彩。</p>
<p>  上次提到了外卖员的行当，我确实去做了四五天，但收益太少，更不谈个人积累，我自觉空耗时间，再加之武汉的夏日阳光实在毒辣，在某一天里给我带上了黑手套，便索性去提了离职。</p>
<p>  随后又去一家写字楼里做了两天数据分析的工作，可这个岗位和我想象中与代码相关的数据分析似乎有所不同，多是些从电商后台取数填表做幻灯片的任务，实在琐碎而无趣。我在试用第二天的午后，在手机上投了几家其他企业的实习，起身提包，和人事打了声招呼就离开了这家公司。</p>
<p>  回家后我继续疯狂投递简历，连续线上面试了两天，有些筋疲力竭。面完便开始等待结果，也没有再继续投递，我察觉到自身能力欠缺，可能需要时间来沉淀。</p>
<p>  这个念头却是点醒了我，起初本科期间我一度热衷于在网络上学习专业技术，后发现心仪的岗位有硕士学历要求后，才开始着手考研，如今上岸之后反而丢了本心，何不重拾学习的爱好呢。</p>
<p>  找导师方面也有了着落，深感世事荒唐，我前几个月辛苦投递了不少老师，甚至线下去探访，只为了找个教学宽松或是大牛做导师，助力自己实习就业或是发刊深造。但每每不利，屡遭拒绝，而今天一位老师仅在几封邮件间便确认了我的去向，竟也正是我心仪的放养学生的导师，我现在都还觉得有点虚幻。</p>
<p>  健身的行程正式开始了，已连续运动了一两个月，我明显感觉身体正在变好，很开心。</p>
<p>  这几个月当真是我有生以来真正自由的美好时光，每天学习、健身、看书、玩游戏，时而出游，我很感激，也很满足，我想保持自律，尽力去沉浸地体验这段如梦的日子。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>2023-4-11</title>
    <url>/posts/7af9fc0e.html</url>
    <content><![CDATA[<h1>2023-4-11</h1>
<p>  今天去尝试了所谓的游戏客服岗位，实际的工作是以让对方下载游戏为目的来打电话并加微信。</p>
<p>  看来我并没有自己想象中的强大，当我在三分钟内被挂了十七通电话并遭到两次辱骂时，上岗不过两小时的我便对这份工作产生了质疑，那不安的情绪也在后续的一小时内发酵成了足以让我离开的芥蒂。</p>
<p>  下午又去了外卖站点，上一次来送外卖的时候只做了三天就亏本离职了，这次心态也许好一点，也希望多做些时日，不要亏本打工。</p>
<p>  似乎我与外卖员的相性差了点，上次来的时候第一天送餐，脚撞肿了，眼镜也断了，还被交警拦了。这次稍强一些，在站点刚提的车，回家路上车钥匙和锁头一起崩掉了，叫我在马路边一通好找。</p>
<p>  以前我一直觉得iCloud挺鸡肋的，主要是免费的容量太少，动不动叫人充值，而对于不那么富裕的人，一听到充值就难免联想到诈骗，因此对这个服务始终保持着警惕与嫌弃。</p>
<p>  但今天突然发现备忘录里自一五年起的记录一直都有被好好保存，即便中途已经更换了不知多少苹果系手机，但这些有意义的文字还能再次被我看到，莫名有些感动。</p>
<p>  忽地想起了我在QQ空间也有许多记录未删除，可惜的是一八年以前的全都删掉了，看得出来那年高考失利，去了一所双非本科对我的打击真的很大。</p>
<p>  也许对那时的我来说，我的前十八年在高考成绩出来那一刻就已经死掉了罢。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>2023-6-18</title>
    <url>/posts/ecca48a8.html</url>
    <content><![CDATA[<h1>2023-6-18</h1>
<p>  这段时间经历可谓跌宕起伏，此前提到过意料之外地找到了一位导师，但近期学院名额确定下来后，老师竟只有一个名额，不得已将我与另一位苦难兄弟放了鸽子。当时我正和朋友在公园骑车，没带手机，骑完车老师就没了，那滋味真是一言难尽。</p>
<p>  我寻思这时重新找导师也未免太晚，已经没抱多大希望，零零散散又给几位之前联络过的老师发了邮件，询问是否还有空余名额。当晚不出意料地得到了否定的回复，只剩两位还没有给明确答复，其中一个老师说会仔细看我简历，另一位尚未回信。</p>
<p>  不过我已经有了心理准备，似乎等学院随机分配导师也无伤大雅，第二天照常和朋友结伴出游。下午在电影院的时候手机接到来电，以为是骚扰电话，出于近期接到类似的来电比较多，也不想耽误看电影，就没有搭理。但后来手机的振动没有停息，我重新看了一眼，是此前没回复我的那位老师发来了邮件，意识到是导师来电后，这才赶紧离开座位，回拨了电话。</p>
<p>  这位老师来电倒是清晰明了，直言晚上开个会议为我介绍一下项目内容，准备进组参与项目。虽然可能要同这段时间的慵懒假日说声再见，但能找到心仪的导师已经相当满足，知足常乐，知足常乐。</p>
<p>  不过倒是有一点真正让我头疼，此前每天也没闲着，一直在坚持啃西瓜书，想补足之前机器学习基础理论方面的短板。但老师安排的项目似乎比较急，需要我赶快熟悉实践环境，这与我此前的学习在时间上略有冲突，但也着实是个挑战。</p>
<p>  顺带一提，在健身方面似乎找到了些诀窍，虽然之前碳水的摄入也一直在控制，但油脂在不知不觉中摄入可能略多，而且我是个不爱吃蔬菜的人，这一点想必极大影响了我的脂肪代谢，不过我这几周已经做出了调整，期待未来一段时间的成果。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML与CSS基础小结</title>
    <url>/posts/a5400049.html</url>
    <content><![CDATA[<h2 id="HTML与CSS小结">HTML与CSS小结</h2>
<h4 id="HTML">HTML</h4>
<p><code>table&gt;tr&gt;th&gt;td</code> 可用类似的关系接上tab键来快捷建表</p>
<p><code>&lt;form action=&quot;&quot; method=“”&gt;</code> action定义提交链接 methon选择提交方式 post为ftp提交 get则会将信息在网页上方链接后显示</p>
<p><code>&lt;input type=&quot;&quot;  name=&quot;&quot; id=&quot;&quot;&gt;</code>语句  type来定义输入类型<br>
无序列表以<code>&lt;ul&gt;</code>元素开始，并包含一个或多个<code>&lt;li&gt;</code>元素。</p>
<span id="more"></span>
<p>如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">	&lt;li&gt;milk&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;fish&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<p>text为单行文本</p>
<p>password为密文</p>
<p>radio为单选</p>
<p>cheakbox为多选</p>
<p>file为文件类型</p>
<p>submit为提交</p>
<p><code>type=&quot;image&quot; name=&quot;&quot; src=&quot;&quot;</code> 也可用图片代替提交</p>
<p><code>reset</code>为重置 <code>type=&quot;reset&quot; value=&quot;&quot;</code> 可改变显示的值</p>
<p><code>&lt;textarea name=&quot;&quot;&gt;&lt;/textarea&gt;</code> 多行文本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option name=&quot;&quot; value=&quot;&quot;&gt;&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>
<p>select与option配合为滚动选择</p>
<p><code>&lt;label for=&quot;id&quot;&gt;</code><br>
配合<code>&lt;input id=&quot;id&quot;&gt;</code>或<code>&lt;textarea id=&quot;id&quot;&gt;</code>或<code>&lt;option id=&quot;id&quot;&gt;</code><br>
可达到点击标签名就能激活输入栏的效果</p>
<h4 id="CSS">CSS</h4>
<h5 id="引入方法">引入方法</h5>
<p>外联式  <code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&quot;&gt;</code><br>
最为常用</p>
<p>嵌入式 在<code>&lt;body&gt;</code>中使用<code>&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code></p>
<p>内联式 <code>&lt;div style=&quot;width:100px; color:red;&quot;&gt;...&lt;/div&gt;</code></p>
<h5 id="常用样式：">常用样式：</h5>
<p>color 设置文字颜色</p>
<p>font-size 设置文字大小</p>
<p>font-family 设置文字字体，如 “Microft YAHEI UI”;</p>
<p>font-style 设置文字是否倾斜，如 <code>font-style: normal/italic</code>;</p>
<p>font-weight 设置文字是否加粗，如 <code>font-weight: bold/normal</code>;</p>
<p>font-height 设置文字行高，如 <code>font-height: xxpx;</code>  行高相当于在每行文字上下同时加间距</p>
<p>font 同时设置文字的多个属性，如 <code>font: 是否加粗 字号/行距 字体</code>===&gt;<br>
<code>font: bold 90px/90px &quot;微软雅黑&quot;</code></p>
<p>text-decoration 设置文字下划线， 如 <code>text-decoration: none;</code> 去掉文字下划线，一般用于链接<a></a>去下划线。</p>
<p>text-indent 设置文字首行缩进，如 <code>text-indent: 24px;</code> 设置首行缩进24px。</p>
<h5 id="颜色表示：">颜色表示：</h5>
<p>1、颜色名表示：red,greem。</p>
<p>2、color: rgb(x,y,z)</p>
<p>3、十六进制表示 color: #000000    最为常用</p>
<h5 id="选择器：">选择器：</h5>
<p>1、标签选择器 范围过大，动一辙百，一般用在层级选择器中。</p>
<p>2、id选择器 只能对应一个元素，不推荐使用。</p>
<p>3、类选择器 应用最多，通过类名来选择元素。</p>
<p>4、层级选择器 选择父元素下的子元素，可与标签元素搭配使用，如：<br>
<code>.box span&#123;color: red;&#125;</code><br>
<code>.box .box01&#123;font-size: 90px;&#125;</code></p>
<p>5、组选择器 同时定义多个相同样式</p>
<p>6、伪类及伪元素选择器 常用伪类有hover，表示鼠标悬停在元素上的状态，伪元素选择器有before和after，可以通过样式在元素（即标签）中插入内容，常用于修复bug。<br>
<code>.box1: hover&#123;color: red;&#125;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box2:before&#123;</span><br><span class="line">content: &quot;行首文字&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box3:after&#123;</span><br><span class="line">content: &quot;行尾文字&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="盒子模型（标签即元素即盒子）">盒子模型（标签即元素即盒子）</h5>
<p>content 内容</p>
<p>padding 内容与边框之间的填充</p>
<p>border 边框</p>
<p>margin 盒子与盒子间的间距</p>
<h5 id="margin使用技巧：">margin使用技巧：</h5>
<p><code>margin: x,auto;</code><br>
可设置也仅能设置水平对齐，自适应浏览器尺寸。</p>
<p>为消除多个div拼接式，边框并接加粗的现象，尝试用<code>margin-top: -1px;</code>来将div向上进行边框重叠。</p>
<h5 id="margin中的bug及解决：">margin中的bug及解决：</h5>
<h6 id="margin-top-bottom-垂直边距的合并，上下两边距相距时，会自动合并，留下较大值。">margin-top/bottom 垂直边距的合并，上下两边距相距时，会自动合并，留下较大值。</h6>
<p>解决：</p>
<p>1、只设置一边的外边距</p>
<p>2、使用这种特性</p>
<p>3、将元素浮动或定位</p>
<h6 id="内部盒子使用margin-top时，将外部盒子撑下来，塌陷。">内部盒子使用margin-top时，将外部盒子撑下来，塌陷。</h6>
<p>解决：</p>
<p>1、外部盒子设置一个边框</p>
<p>2、外部盒子设置overflow:hidden</p>
<p>3、使用伪元素类：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.clearfix:before&#123;</span><br><span class="line">content:&quot;&quot;;</span><br><span class="line">display:table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="解决内联元素代码换行产生间距的问题：">解决内联元素代码换行产生间距的问题：</h6>
<p>父类font-size设为0 在子类中设置各自font-size</p>
<h6 id="清除浮动，解决浮动元素无法撑开父级元素-子元素浮动，父元素未给高度-的问题：">清除浮动，解决浮动元素无法撑开父级元素(子元素浮动，父元素未给高度)的问题：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.clearfix:after&#123;</span><br><span class="line">content:&quot;&quot;;</span><br><span class="line">display:table;</span><br><span class="line">clear:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>二者合并</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.clearfix:before,.clearfix:after&#123;</span><br><span class="line">content:&quot;&quot;;</span><br><span class="line">display:table;</span><br><span class="line">&#125;	</span><br><span class="line">.clearfix:after&#123;</span><br><span class="line">clear:both;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix&#123;</span><br><span class="line">zoom:1;</span><br><span class="line">&#125;//兼容IE</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Dijkstra算法与Bellman-Ford算法</title>
    <url>/posts/a2887fef.html</url>
    <content><![CDATA[<h2 id="Dijkstra算法与Bellman-Ford算法">Dijkstra算法与Bellman-Ford算法</h2>
<p>两者都可以用来寻找加权图中最快的路径，区别在于：</p>
<ul>
<li>Dijkstra算法在无负权边时比BF更快，因为前者仅对每个节点进行遍历，而后者需要对所有的边遍历至多（节点数-1）次。</li>
<li>Dijkstra无法处理存在负权边时的问题。</li>
<li>BF可以用来判断图中是否存在负权环（表现为迭代次数超过了（节点数-1））。但无法处理含负权环的图。</li>
</ul>
<span id="more"></span>
<p>个人理解：</p>
<ul>
<li>Dijkstra算法是对每个节点遍历，对比大小并判断是否需要更新其邻居（即其指向的节点）的开销（起点到该节点的总权值）。记录各节点的父级节点，通过从终点依次寻找父级节点来得到一条最快路径。因为可能图中存在环，为避免死循环的发生，我们每处理一个节点都将其放入一个特定列表，仅处理列表外的节点。</li>
<li>BF算法，起初我以为它是基于Dijkstra的，仔细理解之后我才体会到区别。BF所做的是一次有一次遍历所有的边，相较于Dijkstra而言实现更为简单，由于每遍历一次都至少能找出一条两点间的最短路径，而最短路径的深度不会超过（节点数-1）（即所有节点都在一条路径上的情况），所以遍历次数不会超过（节点数-1）。</li>
</ul>
<p>下面放上基于python对两种算法的实现：</p>
<p>Dijkstra：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def find_lowest_cost_node(costs):</span><br><span class="line">    lowest_cost = inf</span><br><span class="line">    lowest_cost_node = None</span><br><span class="line">    for node in costs:</span><br><span class="line">        cost = costs[node]</span><br><span class="line">        if cost &lt; lowest_cost and node not in processed:</span><br><span class="line">            lowest_cost = cost</span><br><span class="line">            lowest_cost_node = node</span><br><span class="line">    return lowest_cost_node</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dijkstra():</span><br><span class="line">    node = find_lowest_cost_node(costs)</span><br><span class="line">    while node is not None:</span><br><span class="line">        cost = costs[node]</span><br><span class="line">        neighbors = graph[node]</span><br><span class="line">        for n in neighbors.keys():</span><br><span class="line">            new_cost = cost + neighbors[n]</span><br><span class="line">            if new_cost &lt; costs[n]:</span><br><span class="line">                costs[n] = new_cost</span><br><span class="line">                parents[n] = node</span><br><span class="line">        processed.append(node)</span><br><span class="line">        node = find_lowest_cost_node(costs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def print_way():</span><br><span class="line">    key = &#x27;fin&#x27;</span><br><span class="line">    way = []</span><br><span class="line">    while parents[key] != &#x27;start&#x27;:</span><br><span class="line">        if key == &#x27;fin&#x27;:</span><br><span class="line">            way.append(key)</span><br><span class="line">            key = parents[key]</span><br><span class="line">        else:</span><br><span class="line">            way.append(key)</span><br><span class="line">            key = parents[key]</span><br><span class="line">    way.append(key)</span><br><span class="line">    way.append(&#x27;start&#x27;)</span><br><span class="line">    way.reverse()</span><br><span class="line">    for w in way:</span><br><span class="line">        if w == &#x27;start&#x27;:</span><br><span class="line">            print(w, end=&#x27;&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;--&gt;&#x27; + w, end=&#x27;&#x27;)</span><br><span class="line">    print()</span><br><span class="line">    print(&quot;This way cost &quot; + str(costs[&#x27;fin&#x27;]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    # 存储各节点的邻居，与其权重</span><br><span class="line">    graph = &#123;&#x27;start&#x27;: &#123;&#x27;a&#x27;: 6,</span><br><span class="line">                       &#x27;b&#x27;: 2&#125;, &#x27;a&#x27;: &#123;&#x27;fin&#x27;: 1&#125;, &#x27;b&#x27;: &#123;&#x27;a&#x27;: 3,</span><br><span class="line">                                                       &#x27;fin&#x27;: 5&#125;, &#x27;fin&#x27;: &#123;&#125;&#125;</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    # 下为存在负权边时测试用数据，会发现fin对应的开销是35，而并非实际的33。</span><br><span class="line">    graph = &#123;&#x27;start&#x27;: &#123;&#x27;a&#x27;: 5, &#x27;b&#x27;: 0&#125;, &#x27;a&#x27;: &#123;&#x27;b&#x27;: -7&#125;, &#x27;b&#x27;: &#123;&#x27;fin&#x27;: 35&#125;, &#x27;fin&#x27;: &#123;&#125;&#125;</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">    inf = float(&#x27;inf&#x27;)</span><br><span class="line">    # 存储各节点的开销</span><br><span class="line">    costs = &#123;&#x27;start&#x27;: 0, &#x27;a&#x27;: inf, &#x27;b&#x27;: inf, &#x27;fin&#x27;: inf&#125;</span><br><span class="line"></span><br><span class="line">    # 存储到各节点最小开销时，其父节点名称</span><br><span class="line">    parents = &#123;&#x27;a&#x27;: None, &#x27;b&#x27;: None, &#x27;fin&#x27;: None&#125;</span><br><span class="line"></span><br><span class="line">    # 存储已经处理过的节点</span><br><span class="line">    processed = []</span><br><span class="line"></span><br><span class="line">    # 计算部分：</span><br><span class="line">    dijkstra()</span><br><span class="line">    print_way()</span><br></pre></td></tr></table></figure>
<p>Bellman-Ford：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def dic(j, k, l):</span><br><span class="line">    d = dict(j=j, k=k, l=l)</span><br><span class="line">    return d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def bellman_ford():</span><br><span class="line">    for i in range(len(graph.keys()) - 1):</span><br><span class="line">        for e in edge:</span><br><span class="line">            # line为包含该边起始点、终末点以及长度的字典</span><br><span class="line">            line = edge[e]</span><br><span class="line">            j = line[&#x27;j&#x27;]</span><br><span class="line">            k = line[&#x27;k&#x27;]</span><br><span class="line">            l = line[&#x27;l&#x27;]</span><br><span class="line">            # cost为该边终末点的开销</span><br><span class="line">            cost = costs[k]</span><br><span class="line">            new_cost = l + costs[j]</span><br><span class="line">            if cost &gt; new_cost:</span><br><span class="line">                costs[k] = new_cost</span><br><span class="line">                parents[k] = j</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def print_way():</span><br><span class="line">    key = &#x27;fin&#x27;</span><br><span class="line">    way = []</span><br><span class="line">    while parents[key] != &#x27;start&#x27;:</span><br><span class="line">        if key == &#x27;fin&#x27;:</span><br><span class="line">            way.append(key)</span><br><span class="line">            key = parents[key]</span><br><span class="line">        else:</span><br><span class="line">            way.append(key)</span><br><span class="line">            key = parents[key]</span><br><span class="line">    way.append(key)</span><br><span class="line">    way.append(&#x27;start&#x27;)</span><br><span class="line">    way.reverse()</span><br><span class="line">    for w in way:</span><br><span class="line">        if w == &#x27;start&#x27;:</span><br><span class="line">            print(w, end=&#x27;&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;--&gt;&#x27; + w, end=&#x27;&#x27;)</span><br><span class="line">    print()</span><br><span class="line">    print(&quot;This way cost &quot; + str(costs[&#x27;fin&#x27;]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    graph = &#123;&#x27;start&#x27;: &#123;&#x27;a&#x27;: 5, &#x27;b&#x27;: 0&#125;, &#x27;a&#x27;: &#123;&#x27;b&#x27;: -7&#125;, &#x27;b&#x27;: &#123;&#x27;fin&#x27;: 35&#125;, &#x27;fin&#x27;: &#123;&#125;&#125;</span><br><span class="line">    inf = float(&#x27;inf&#x27;)</span><br><span class="line">    costs = &#123;&#x27;start&#x27;: 0, &#x27;a&#x27;: inf, &#x27;b&#x27;: inf, &#x27;fin&#x27;: inf&#125;</span><br><span class="line">    parents = &#123;&#x27;a&#x27;: None, &#x27;b&#x27;: None, &#x27;fin&#x27;: None&#125;</span><br><span class="line">    way = []</span><br><span class="line">    edge = &#123;&#x27;sa&#x27;: dic(&#x27;start&#x27;, &#x27;a&#x27;, 5), &#x27;sb&#x27;: dic(&#x27;start&#x27;, &#x27;b&#x27;, 0), &#x27;ab&#x27;: dic(&#x27;a&#x27;, &#x27;b&#x27;, -7), &#x27;bf&#x27;: dic(&#x27;b&#x27;, &#x27;fin&#x27;, 35)&#125;</span><br><span class="line">    bellman_ford()</span><br><span class="line">    print_way()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>Dijkstra</tag>
        <tag>Bellman-Ford</tag>
        <tag>算法</tag>
        <tag>加权图</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题优化汇总</title>
    <url>/posts/acdcd664.html</url>
    <content><![CDATA[<h2 id="Next主题优化汇总">Next主题优化汇总</h2>
<h3 id="主题优化">主题优化</h3>
<p><strong><font color="brown">由于hexo的主题优化相关已经有很多前辈分享过经验，如果有我觉得很完善的汇总博文，我会在下面直接贴出链接</font></strong></p>
<span id="more"></span>
<h4 id="界面美化">界面美化</h4>
<p><a href="https://segmentfault.com/a/1190000014676320"><font color="brown">关于Hexo6.0搭建个人博客(进阶篇)</font></a>  这篇博客包括了</p>
<ul>
<li>配置博客基本信息</li>
<li>配置主题</li>
<li>优化主题</li>
</ul>
<ul>
<li>上传头像,并设置头像旋转效果</li>
<li>设置个人社交图标链接</li>
<li>设置RSS</li>
<li>设置酷炫动态背景</li>
<li>设置主题语言</li>
<li>设置网站logo</li>
<li>设置左上角或者右上角的fork me on github效果</li>
<li>设置顶部滚动加载条</li>
<li>自定义博客底部显示效果</li>
<li>为首页文章添加阴影边框效果</li>
<li>为首页添加自定义菜单栏标签</li>
</ul>
<h4 id="功能优化">功能优化</h4>
<h5 id="大多数功能拓展">大多数功能拓展</h5>
<p>在做收尾工作时，我惊喜的发现<a href="https://albenw.github.io/categories/hexo/"><font color="gren"><em>alben.wong</em></font></a>的博客里已经收录了大多数的功能拓展，相当感谢，这样也免去大家像我一样东拼西凑的麻烦。</p>
<ul>
<li>如果在安装了hexo-admin和valine后，同时启动两者后台时，报错如下：<a href="https://ywandy.github.io/%E8%A7%A3%E5%86%B3linux%E4%B8%8Bnodejs%E4%B8%ADwatch%E6%96%87%E4%BB%B6%E6%9C%80%E5%A4%A7%E6%95%B0%E5%BC%82%E5%B8%B8.html"><font color="red">ENOSPC: System limit for number of file watchers reached</font></a>。可直接进入链接查看方案。</li>
</ul>
<h5 id="完善外链跳转">完善外链跳转</h5>
<p>我遇到过关于站内跳转外链时无法正常跳转的问题，例如在“aysamu.space”下点开一个名为为“url”链接，结果进入的是“aysamu.space/url”，而不是我们希望进入的“url”。对此，我搜索到了下面的方案：<a href="https://cloud.tencent.com/developer/article/1068470"><font color="red">对网页内跳转外链代码的改善</font></a>。</p>
<h5 id="valine评论框中设置必填项">valine评论框中设置必填项</h5>
<p>刚开始我使用valine评论系统时，因其可匿名发布，使得评论区全都是匿名用户，看得头疼。我在一个大佬的博客里看到了他的valine中，昵称和邮箱是必填<br>
项！像这样：<br>
<img src="acdcd664/valine.png" alt="必填项"><br>
然后我就去问大佬，可惜他配置已经太久，忘了流程，把配置文件发给了我让我自个儿研究。但是，我拿着配置文件倒腾半天，没效果╯︿╰。于是，我，又双叒叕去问网友！群里的老哥很快就给了我回复！<br>
<img src="acdcd664/reply.png" alt="群里的回复"></p>
<p><a href="https://deserts.io/diy-a-comment-system/"><font color="gren"><em>DesertP</em></font></a>的博客我之前看到过，可我比较懒，就选择使用volantis。然鹅，一进入conf我就麻了( ╯□╰ )。我的conf里并没有给出valine的引入配置，经询问后，得知我使用的5.1.4版本过低。<br>
升级到Next6之后，又遇到了许多奇奇怪怪的问题……最终我决定还是回到已经大部分配置好的5.1.4，<strong>解决方案</strong>在下面。</p>
<ul>
<li>轻车熟路，我找到了theme/next/layout/_third-party/comments/valine.swig，将引用valine.js/valine.min.js的src改成了由*<font color="gren">BurgerTown@tk</font>*分享的<code>https://blog-1253475808.file.myqcloud.com/custom_js/volantis.min.js</code>volantis引用。成功搞定。</li>
</ul>
<h3 id="感想">感想</h3>
<p>在搭建hexo的过程中，我一次又一次的感受到来自陌生人的纯粹的善意。也许最初这只是我一次随意的尝试，但在与大家分享，交流后，我真切的喜欢上这样的氛围。这样的体验给我对所选择的专业的想法，对我希望进入的领域的想法，带来了相当的改变，我相信hexo的圈子只是一个缩影，为此，再一次感谢前方的开拓者们。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Numpy学习笔记</title>
    <url>/posts/6e7d4b9f.html</url>
    <content><![CDATA[<h2 id="Numpy笔记">Numpy笔记</h2>
<h4 id="数组形状">数组形状</h4>
<ol>
<li><code> array.shape</code> 返回数组的形状（行列）。</li>
<li><code>array.reshape()</code>以某格式返回数组，如(3, 2)三行二列。</li>
<li><code>array.flatten</code>将数组还原成一维数组。</li>
</ol>
<span id="more"></span>
<h4 id="切片和索引">切片和索引</h4>
<ol>
<li>
<p>选择行</p>
<p><code>t[2]</code></p>
<p><code>t[3:, :]</code></p>
</li>
<li>
<p>选择列</p>
<p><code>t[:, 4:]</code></p>
</li>
<li>
<p>选择行列</p>
<p>连续的多行 <code>t[2:, :3]</code></p>
<p>不连续 <code>t[[1, 3], [2, 4]]</code> 选择的是(1, 2)，(3, 4)两个位置的值</p>
</li>
<li>
<p>索引</p>
<p><code>[2, 3]</code></p>
</li>
</ol>
<h4 id="赋值">赋值</h4>
<p><code>t[2:, 3]=3</code></p>
<h4 id="布尔索引">布尔索引</h4>
<p><code>t[t&gt;10]=10</code></p>
<h4 id="三元运算符">三元运算符</h4>
<p><code>np.where(t&gt;10, 20, 0)</code> 把t中大于10的替换为20，其他的替换为0</p>
<h4 id="裁剪">裁剪</h4>
<p><code>t.clip(10, 20)</code>把小于10的替换为10， 大于20的替换为20</p>
<h4 id="转置">转置</h4>
<ol>
<li><code>t.T</code></li>
<li><code>t.transpose()</code></li>
<li><code>t.swapaxes(1, 0)</code></li>
</ol>
<h4 id="读取本地文件">读取本地文件</h4>
<p><code>np.loadtxt(file_path, delimiter, dtype)</code></p>
<h4 id="nan和inf">nan和inf</h4>
<h5 id="inf">inf</h5>
<p>表示无穷</p>
<h5 id="nan">nan</h5>
<ol>
<li>不是一个数字，属于浮点类型。</li>
<li><code>np.nan!=np.nan</code> 为真</li>
<li><code>np.count_nonzero(np.nan!=np.nan)</code> 统计nan个数</li>
<li><code>np.isnan(ti)</code> 效果和2相同</li>
</ol>
<h4 id="常用统计函数">常用统计函数</h4>
<ol>
<li><code>t.sum(axis=0)</code> 求某一反向上的和（axis为none时统计整个矩阵）</li>
<li><code>np.median(t, axis=0)</code> 求中位数</li>
<li><code>t.mean(axis=0)</code> 求均值</li>
<li><code>t.max()</code> 最大值</li>
<li><code>t.min()</code> 最小值</li>
<li><code>np.ptp</code> 计算极差（最大减最小）</li>
<li><code>t.std</code> 标准差</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
        <category>数据分析</category>
        <category>Numpy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Numpy</tag>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>Python爬虫小结</title>
    <url>/posts/c9a3baef.html</url>
    <content><![CDATA[<h1>Python爬虫小结</h1>
<p>  最近花了点时间在爬虫知识上面，但偶然发现以GPT生成代码为基础来编写爬虫能省去很多功夫，就想停止在爬虫方面的学习，把时间花在其他方面。借由本文来对这段时间对爬虫的学习进行温习与梳理，我自知在这方面只是接触了些皮毛，却是也不愿让前些天的功夫白费。</p>
<h2 id="请求网页资源">请求网页资源</h2>
<p>  第一步往往是使用<code>requests</code>库来请求网页资源，最简单的情况莫过于直接用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ua = &#123;<span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&quot;</span>&#125;  <span class="comment">#复制粘贴浏览器的ua</span></span><br><span class="line">url = 请求网址</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHTMLText</span>(<span class="params">url</span>):</span><br><span class="line">	<span class="keyword">try</span>:</span><br><span class="line">        resp = requests.get(url, headers=ua, timeout=<span class="number">30</span>)</span><br><span class="line">        resp.encoding = resp.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">resp = getHTMLText(url)  <span class="comment"># 请求网页资源</span></span><br><span class="line">resp_text = resp.text  <span class="comment"># 获取html内容</span></span><br><span class="line">resp.close()  <span class="comment"># 关闭连接</span></span><br></pre></td></tr></table></figure>
<p>  通过直接请求便能获取所需要的页面资源。</p>
<p>  但网页情况往往比我们想象的要复杂的多，根据具体环境，我们可能需要选择使用<code>get</code>或<code>post</code>请求方式，并通过抓包工具，获取部分请求中的参数或密钥，这将涉及反反爬的内容，还需具体情况具体分析。</p>
<p>  对于一些需要登陆才能获取的信息，我们也可能需要在<code>headers</code>的内容中添加<code>cookie</code>或使用<code>requests</code>库中的<code>session</code>方式来进行持续的会话。</p>
<p>  为处理具备防盗链的网站，在<code>headers</code>中也当配置相应的<code>reference</code>项。</p>
<h2 id="解析网络资源">解析网络资源</h2>
<p>  在最复杂的获取资源步骤结束后，我们需要做的工作就较为简单明了了，解析时常用如下几个包：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re  <span class="comment"># 正则方法解析</span></span><br><span class="line">reobj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;正则表达式&#x27;</span>)</span><br><span class="line">it = reobj.finditer(resp_text)  <span class="comment"># 返回迭代器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup  <span class="comment"># BS4方法解析</span></span><br><span class="line">page = BeautifulSoup(resp_text, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">page_items = page.find(<span class="string">&quot;div&quot;</span>, attrs=&#123;<span class="string">&quot;class&quot;</span>:<span class="string">&quot;类名&quot;</span>&#125;).get(<span class="string">&#x27;标签名&#x27;</span>)  <span class="comment"># get获取某标签内的属性或直接find获取内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree  <span class="comment"># xpath方法解析</span></span><br><span class="line">html = etree.HTML(resp_text)</span><br><span class="line">divs = html.xpath(<span class="string">&#x27;xpath路径/text()&#x27;</span>)  <span class="comment"># 亦可通过&#x27;/@属性名&#x27;来获取某属性</span></span><br></pre></td></tr></table></figure>
<h2 id="下载需求资源">下载需求资源</h2>
<p>  下载时直接使用python常见方法即可：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># 图片视频资源</span></span><br><span class="line">	f.write(content)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(name, mode=<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># 文本资源</span></span><br><span class="line">	f.write(content)</span><br></pre></td></tr></table></figure>
<h2 id="协程与多线程爬虫">协程与多线程爬虫</h2>
<p>  这块应该是我本轮学习收获最大的地方，此前我没怎么接触过相关的知识，对于协程更是闻所未闻，一番学习后相当惊艳。</p>
<h3 id="多线程与协程的区别">多线程与协程的区别</h3>
<p>  多线程我是相对比较熟悉的，它使用多道线程执行同一进程任务，如我想爬取编号为1-1000的页面，使用多线程便是并行的从1-100，2-200，.….…，900-1000进行爬取。但这之中有个问题，正如我单线程爬取1-1000时，遇到某个麻烦便会阻塞从而耽误时间，多线程中负责1-100的子线程遇到麻烦也会因此较低效率，而协程可以解决这种问题。</p>
<p>  在协程中，程序员视角看到的只有一个线程，可以理解为这个线程在1-100阻塞时，立刻转身去处理2-200，若再阻塞，同样停手去处理其他任务。可能一开始难以理解它与多线程孰优孰劣，但协程有一个显而易见的优势，资源利用率更高，可以想象，在多线程中某一个子线程还在1-100发呆时，同进度下的协程方法已经将该资源投向其他任务了。事实上在单节点运行时是协程更快，多节点分布式环境下则难以比较，但在理论上协程仍具有资源优势。</p>
<h3 id="多线程爬虫">多线程爬虫</h3>
<p>  对于多线程爬虫，我只记录线程池的用法，因为这个可能更为实用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">first</span>):  <span class="comment"># 这是一个基本任务，它接受参数first，并输出字符串</span></span><br><span class="line">    			  <span class="comment">#	&quot;first + (first+1)&quot;，如参数为1时，输出为&quot;1 + 2&quot;</span></span><br><span class="line">    pid = first</span><br><span class="line">    first = <span class="built_in">int</span>(first)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;线程<span class="subst">&#123;pid&#125;</span>：<span class="subst">&#123;first&#125;</span> + <span class="subst">&#123;first+<span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">        first+=<span class="number">1</span></span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">with</span> ThreadPoolExecutor(<span class="number">50</span>) <span class="keyword">as</span> pool:  <span class="comment"># 创建一个具备50个线程的线程池</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):  <span class="comment"># 对该线程池提交100道任务</span></span><br><span class="line">        pool.submit(count, first=i)  <span class="comment"># 每道任务参数为i，实际应用中自行调整参数。</span></span><br></pre></td></tr></table></figure>
<h3 id="协程异步爬虫">协程异步爬虫</h3>
<p>  我在本轮学习中，所使用到的协程任务基本写法有如下两种：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">fun1</span>():</span><br><span class="line">    time.sleep(<span class="number">3</span>)  <span class="comment"># 模仿阻塞状态</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">fun2</span>():</span><br><span class="line">    time.sleep(<span class="number">4</span>)  <span class="comment"># 模仿阻塞状态</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">fun3</span>():</span><br><span class="line">    time.sleep(<span class="number">5</span>)  <span class="comment"># 模仿阻塞状态</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">## 以下为第一种写法</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">solve_1</span>():</span><br><span class="line">    tasks = [  <span class="comment"># 创建一个等待任务队列，以供协程切换。</span></span><br><span class="line">        asyncio.create_task(fun1()),</span><br><span class="line">        asyncio.create_task(fun2()),</span><br><span class="line">        asyncio.create_task(fun3()),</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">await</span> asyncio.wait(tasks)  <span class="comment"># 注意，若函数中某行出现await字样，则该函数前须加async。</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(solve_1())  <span class="comment"># 这种写法必须在主函数中调用asyncio.run()，对于封装似乎不太友好，我更倾向于用第二种写法。</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">## 以下为第二种写法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_2</span>():</span><br><span class="line">    loop = asyncio.get_event_loop()  <span class="comment"># 我们手动创建一个事件循环</span></span><br><span class="line">    tasks = [  <span class="comment"># 创建一个等待任务队列，以供协程切换。</span></span><br><span class="line">        loop.create_task(fun1()),  <span class="comment"># 注意，我们不再将任务注册到asyncio自带的循环中，转而注册到刚刚创建的loop中。</span></span><br><span class="line">        loop.create_task(fun2()),</span><br><span class="line">        loop.create_task(fun3()),</span><br><span class="line">    ]</span><br><span class="line">    loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">    loop.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_2()</span><br></pre></td></tr></table></figure>
<p>  对于写法二，若不使用loop循环，直接使用<code>asyncio.create_task()</code>则会报错:</p>
<blockquote>
<p>RuntimeError: no running event loop</p>
</blockquote>
<p>  这是因为<code>asyncio</code>自带的循环还没开始运行，故无法将任务注册，因此我们将其注册到自己创建的<code>loop</code>中并交由<code>loop</code>执行这个队列。顺带一提，在写法一总同样可以自建<code>loop</code>，即便是注册到<code>asyncio</code>的任务队列也可以交由<code>loop</code>来运行，队列的注册对象与执行者没有直接关联，仅存在时间上的冲突。具体说明可参考写法二参考<a href="https://stackoverflow.com/questions/58774718/asyncio-in-corroutine-runtimeerror-no-running-event-loop">这个解答</a>。</p>
<p>  最后贴上一份异步协程爬虫爬取西游记小说的代码，同样使用了两种写法，以供后续参考。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> aiofiles</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">aiodownload</span>(<span class="params">cid, b_id, title</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;book_id&quot;</span>: b_id,</span><br><span class="line">        <span class="string">&quot;cid&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;b_id&#125;</span>|<span class="subst">&#123;cid&#125;</span>&quot;</span>,</span><br><span class="line">        <span class="string">&quot;need_bookinfo&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = json.dumps(data)</span><br><span class="line">    url = <span class="string">f&quot;http://dushu.baidu.com/api/pc/getChapterContent?data=<span class="subst">&#123;data&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> resp:</span><br><span class="line">            dic = <span class="keyword">await</span> resp.json()</span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> aiofiles.<span class="built_in">open</span>(title, mode=<span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">await</span> f.write(dic[<span class="string">&quot;data&quot;</span>][<span class="string">&#x27;novel&#x27;</span>][<span class="string">&quot;content&quot;</span>])</span><br><span class="line">                </span><br><span class="line"><span class="comment">## 写法一               </span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">getCatalog_1</span>(<span class="params">url, b_id</span>):</span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    dic = resp.json()</span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> dic[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;novel&quot;</span>][<span class="string">&quot;items&quot;</span>]:</span><br><span class="line">        title = item[<span class="string">&quot;title&quot;</span>]</span><br><span class="line">        cid = item[<span class="string">&quot;cid&quot;</span>]</span><br><span class="line">        task = asyncio.create_task(aiodownload(cid, b_id, title))</span><br><span class="line">        tasks.append(task)</span><br><span class="line">    <span class="keyword">await</span> asyncio.wait(tasks)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 写法二</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getCatalog_2</span>(<span class="params">url, b_id</span>):</span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    dic = resp.json()</span><br><span class="line">    tasks = []</span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> dic[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;novel&quot;</span>][<span class="string">&quot;items&quot;</span>]:</span><br><span class="line">        title = item[<span class="string">&quot;title&quot;</span>]</span><br><span class="line">        cid = item[<span class="string">&quot;cid&quot;</span>]</span><br><span class="line">        task = loop.create_task(aiodownload(cid, b_id, title))</span><br><span class="line">        tasks.append(task)</span><br><span class="line">    loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">    loop.close()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    b_id = <span class="string">&quot;4306063500&quot;</span></span><br><span class="line">    url = <span class="string">f&#x27;http://dushu.baidu.com/api/pc/getCatalog?data=&#123;&#123;&quot;book_id&quot;:&quot;<span class="subst">&#123;b_id&#125;</span>&quot;&#125;&#125;&#x27;</span></span><br><span class="line">    <span class="comment"># asyncio.run(getCatalog_1(url, b_id))  # 写法一</span></span><br><span class="line">    getCatalog_2(url, b_id)  <span class="comment"># 写法二</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>docker结合uvicorn与fastapi部署算法模型</title>
    <url>/posts/4d6e75e7.html</url>
    <content><![CDATA[<h1>前言</h1>
<p>初次接触后端，上一个项目是使用uvicorn+fastapi部署，当时环境难以改用docker，只能nohup后台运行，难免有点局促，这次研究一下后面如何使用docker部署。</p>
<h1>提供接口</h1>
<p>使用uvicorn与fastapi可将算法模型快速的封装为接口以供调用：<img src="4d6e75e7/Pasted%20image%2020240112002634.png" alt><br>
其中uvicorn既可以在代码中以主函数调用，也可在命令行中使用参数启动。</p>
<h1>生成当前环境配置文件</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 命令行中</span><br><span class="line"># 切换到目标环境</span><br><span class="line">conda activate $&#123;ENV_NAME&#125;</span><br><span class="line"># 生成environment.yml</span><br><span class="line">conda env export &gt; environment.yml</span><br></pre></td></tr></table></figure>
<h1>在启动容器时切换conda环境</h1>
<p>此处配置相当棘手，由于RUN每次使用都会创建一个新的窗口，直接执行<code>conda activate $&#123;ENV_NAME&#125;</code>是没有用的，耗费长时间查阅才得知解决方案。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 复制环境文件</span><br><span class="line">COPY environment.yml .</span><br><span class="line"></span><br><span class="line"># 安装目标环境</span><br><span class="line">RUN conda env create -f environment.yml</span><br><span class="line"></span><br><span class="line"># 设置自动切换环境</span><br><span class="line">RUN echo &quot;source activate $&#123;ENV_NAME&#125;&quot; &gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"># 如环境中需要补充部分包，可按此形式在一个RUN命令中执行</span><br><span class="line">RUN source activate $&#123;ENV_NAME&#125; &amp;&amp; python -m spacy download package1 &amp;&amp; pip install package2</span><br><span class="line"></span><br><span class="line"># 将Conda环境路径进环境变量中。</span><br><span class="line">ENV PATH /opt/conda/envs/$&#123;ENV_NAME&#125;&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>至此，在docker构建时自动切换conda环境便以配置完成，实际编写dockerfile时，尽量使用更少行数的RUN命令。</p>
<h1>Dockerfile样例</h1>
<p>可参照以下样例编写算法模型的Dockerfile。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用基础镜像，选择一个包含Python和Conda的镜像</span><br><span class="line">FROM continuumio/miniconda3:latest</span><br><span class="line"></span><br><span class="line"># 设置工作目录</span><br><span class="line">WORKDIR /KAPING</span><br><span class="line"></span><br><span class="line"># 复制Conda环境文件</span><br><span class="line">COPY environment.yml .</span><br><span class="line"></span><br><span class="line"># 设置shell</span><br><span class="line">SHELL [&quot;/bin/bash&quot;, &quot;--login&quot;, &quot;-c&quot;]</span><br><span class="line"></span><br><span class="line"># 创建Conda环境</span><br><span class="line">RUN conda env create -f environment.yml</span><br><span class="line"></span><br><span class="line"># 激活Conda环境，并补充缺失的包，再设置窗口启动时自动激活该环境。</span><br><span class="line">RUN source activate kaping &amp;&amp; python -m spacy download zh_core_web_sm &amp;&amp; echo &quot;source activate kaping&quot; &gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"># 将Conda环境路径进环境变量中。</span><br><span class="line">ENV PATH /opt/conda/envs/kaping/bin:$PATH</span><br><span class="line"></span><br><span class="line"># 配置GPU设备</span><br><span class="line">ENV CUDA_VISIBLE_DEVICES 4</span><br><span class="line"></span><br><span class="line"># 复制模型文件和其他必要文件（COPY的第一个路径虽指向本地，但仅能选择当前目录下的文件）</span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line"># 暴露端口</span><br><span class="line">EXPOSE 8820</span><br><span class="line"></span><br><span class="line"># 启动应用</span><br><span class="line">CMD [&quot;python&quot;, &quot;-m&quot;,  &quot;uvicorn&quot;, &quot;app:app&quot;, &quot;--host&quot;, &quot;0.0.0.0&quot;, &quot;--port&quot;, &quot;8820&quot;]</span><br></pre></td></tr></table></figure>
<h1>构建镜像</h1>
<p>切换到项目文件夹<br>
<code>docker build -t kaping .</code><br>
<code>-t</code>后指定镜像名称，末处参数指向包含Dockerfile的路径。<br>
<code>nohup docker build -t kaping . --progress=plain &amp;</code>可显示更详细的构建过程，如下载环境中包的情况，在耗时过长时可使用，通常用上一命令即可。</p>
<h1>创建容器</h1>
<p><code>docker run --name kaping -p 8820:8820 kaping</code><br>
<code>--name</code>是容器名称； <code>-p</code>后为容器内部端口：本地端口，末处参数为镜像名称；<code>-d</code>可在后台创建容器，默认情况下在创建后会自动进入容器；<code>-v 本地路径:容器内路径</code>可将本地目录挂载到容器内目录，使其数据修改相通。</p>
<h1>容器操作</h1>
<p><code>docker ps -a</code> 查看所有容器，无<code>-a</code>则仅查看运行中的容器。<br>
<code>docker images</code>查看所有镜像。<br>
<code>docker rm container_id</code>使用容器id删除指定容器。<br>
<code>docker rmi image_id</code>使用镜像id删除指定镜像。<br>
<code>docker start/stop container_id</code>启动/暂停某一容器（start默认后台启动，每次启动都会执行Dockerfile中的启动命令）。<br>
<code>docker exec -it container_id /bin/bash</code>以命令行界面进入某一容器。<br>
<code>docker builder prune</code>可清理构建时的缓存。</p>
<h1>容器创建后修改项目代码</h1>
<p>每次重新构建镜像十分麻烦，在确保末行CMD命令有效的情况下，我们可以通过start命令启动后，再使用exec进入容器进行代码修改，退出容器后重新使用start启动即可。</p>
<h1>查询端口占用</h1>
<p>在容器外可查看指定端口占用情况。<br>
<code>netstat -tulpn | grep :8820</code></p>
]]></content>
  </entry>
  <entry>
    <title>matplotlib学习笔记</title>
    <url>/posts/643c4929.html</url>
    <content><![CDATA[<h2 id="matplotlib学习笔记">matplotlib学习笔记</h2>
<ol>
<li>
<p>引入</p>
<p><code> from matplotlib import pyplot as plt</code></p>
</li>
<li>
<p>设置图形大小</p>
<p><code>plt.figure(figsize=(20, 10), dpi=80)</code> <em>大小、清晰度</em></p>
<span id="more"></span>
</li>
<li>
<p>绘图</p>
<p><code>plt.plot(x, y)</code> <em>折线图</em></p>
<p><code>plt.scatter</code> <em>散点图</em></p>
<p><code>plt.bar</code> <em>条形图（竖式）</em>  <code>plt.barh</code><em>条形图（横式）</em></p>
<p><code>plt.hist </code> <em>直方图</em></p>
<p>更多样式可参照<a href="https://matplotlib.org/gallery/index.html"><font color="red">官网</font></a>(可能需要梯子)</p>
</li>
<li>
<p>调整x、y轴刻度</p>
<p><code>plt.xticks()</code> | <code> plt.yticks()</code></p>
<ul>
<li>
<p>传入一个参数（数字列表），步长合适即可。</p>
</li>
<li>
<p>传入两个参数，分别是数字列表和字符串列表，两者一一对应，只显示字符串。</p>
<blockquote>
<p>先确定坐标，再引入文字。</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>展示图片</p>
<p><code>plt.show()</code></p>
</li>
<li>
<p>保存</p>
<p><code>plt.savefig(&quot;file_path&quot;)</code></p>
</li>
<li>
<p>显示中文</p>
<ul>
<li>
<p><code>matplolib.rc(&quot;font&quot;, family=&quot;MicroSoft YaHei&quot;, weight=&quot;bold&quot;, size=16)</code></p>
</li>
<li>
<pre><code>from matplolib import font_manager
my_font = font_manager.FontProperties(fname=&quot;字体文件路径&quot;)
</code></pre>
<p>在要使用中文处添加<code>fontproperties=my_font</code></p>
<p>图例中使用<code> prop=my_font</code></p>
<p>linux下使用<code>fc-list</code>查看可用字体</p>
</li>
</ul>
</li>
<li>
<p>图例</p>
<p>给当前图形添加注释以供区别</p>
<p><code>plot(label=&quot;自己&quot;)</code></p>
<p><code>plot.legent(loc, prop)</code> loc表示图例位置</p>
</li>
<li>
<p>图形样式</p>
<p>color、linestyle、linewidth、alpha（透明度）。</p>
</li>
<li>
<p>图形描述</p>
<p><code>plt.xlabel()</code> <em>x轴</em></p>
<p><code>plt.ylabel()</code> <em>y轴</em></p>
<p><code>plt.title()</code> <em>标题</em></p>
</li>
<li>
<p>网格设置</p>
<p><code>plt.grid(alpha=0.4, linestyle=solid)</code></p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
        <category>数据分析</category>
        <category>matplotlib</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
        <tag>matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>pandas学习笔记</title>
    <url>/posts/eaac5978.html</url>
    <content><![CDATA[<h2 id="pandas学习笔记">pandas学习笔记</h2>
<h3 id="字符串离散化">字符串离散化</h3>
<ol>
<li>
<p>获得字符串去重后的列表</p>
<p><code>set()</code></p>
</li>
<li>
<p>从dataframe文件中获取多重列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp_list = df[&quot;Genre&quot;].str.split(&quot;,&quot;).tolist() # [[], [], []]</span><br><span class="line"></span><br><span class="line">genre_list = list(set([i for j in temp_list for i in j])) # j对应二级列表，i对应二级列表中内容</span><br></pre></td></tr></table></figure>
<span id="more"></span>
</li>
<li>
<p>构造全为零的数组，columns为字符串的列表</p>
<p><code>zero_df = pd.DataFrame(np.zeros((2, 4)), index=list(&quot;AB&quot;), columns=list(&quot;abcd&quot;))</code></p>
</li>
<li>
<p>给全为零的数组赋值，遍历</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for i in range(df.shape[0]):</span><br><span class="line">	zero_df.loc[i, list(&quot;abcd&quot;)[i]] = 1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="join">join</h3>
<ol>
<li>按照index来进行分组</li>
<li><code>t1.join(t2)</code># 进行行拼接</li>
</ol>
<h3 id="merge">merge</h3>
<ol>
<li>按照列数据进行分组</li>
<li><code>t1.merge(t2, on=&quot;a&quot;, how=&quot;inner&quot;)</code>默认内连接（交集），若列中存在相同值，则将该行拼接</li>
<li><code>t1.merge(t2, on=&quot;a&quot;, how=&quot;outter&quot;)</code> 外连接（并集）</li>
<li><code>t1.merge(t2, on=&quot;a&quot;, how=&quot;left&quot;)</code>以t1为准</li>
<li><code>t1.merge(t2, on=&quot;a&quot;, how=&quot;right&quot;)</code> 以t2为准</li>
<li><code>t1.merge(t2, left_on=&quot;a&quot;, right_on=&quot;b&quot;, how=&quot;left&quot;)</code> 若无相同类名时可如此使用</li>
</ol>
<h3 id="分组聚合">分组聚合</h3>
<ol>
<li><code>df.groupby(by=&quot;&quot;)</code>得到grouped对象，能够调用聚合方法、遍历</li>
<li><code>df.groupby(by).count()</code></li>
<li><code>df.groupby(by).mean()</code></li>
<li><code>df.groupby(by=[&quot;&quot;, &quot;&quot;]).count</code>带复合索引的DataFrame</li>
</ol>
<h3 id="索引">索引</h3>
<ol>
<li>
<p><code>df.index</code>获取索引</p>
</li>
<li>
<p><code>df.index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</code>设置索引的值</p>
</li>
<li>
<p><code>df.set_index(&quot;a&quot;)</code>将某列的值设为索引</p>
</li>
<li>
<p><code>df.set_index([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])</code>将多列设为复合索引</p>
</li>
<li>
<p>从复合索引中取值</p>
<ol>
<li>
<p><code>Series</code></p>
<ul>
<li><code>s1[&quot;a&quot;][&quot;b&quot;]</code></li>
<li><code>si[&quot;a&quot;, &quot;b&quot;]</code></li>
</ul>
</li>
<li>
<p>DataFrame</p>
<p><code>df.loc[&quot;a&quot;].loc[&quot;b&quot;]</code>输入索引目录下的值以获取对应数据</p>
</li>
</ol>
</li>
<li>
<p>从里层索引开始选取</p>
<ol>
<li><code>df.swaplevel()</code></li>
<li>交换里外层索引的位置</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
        <category>数据分析</category>
        <category>pandas</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>python实现基于MapReduce的K-means聚类算法</title>
    <url>/posts/ab49b85e.html</url>
    <content><![CDATA[<h1><strong>python实现基于MapReduce的K-means聚类算法</strong></h1>
<p>话不多说，直接上代码。<br>
数据源我没给，想要本地尝试跑的话，可以把sys.stdin替换成本地数据源。</p>
<span id="more"></span>
<p>Mapper：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ComputeDist</span>(<span class="params">instance, center</span>):  <span class="comment"># 计算样本点与中心点距离</span></span><br><span class="line">    i = np.array(<span class="built_in">eval</span>(instance)).astype(np.<span class="built_in">float</span>)</span><br><span class="line">    c = np.array(center).astype(np.<span class="built_in">float</span>)</span><br><span class="line">    ans = np.sqrt(np.<span class="built_in">sum</span>(np.square(i - c)))</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">separator=<span class="string">&#x27;\t&#x27;</span></span>):  <span class="comment"># 传入K值</span></span><br><span class="line">    minDis = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">    centers = [(<span class="number">1</span>, <span class="number">1</span>), (-<span class="number">1</span>, -<span class="number">1</span>), (<span class="number">1</span>, -<span class="number">1</span>), (-<span class="number">1</span>, <span class="number">1</span>)]  <span class="comment"># 选择初始中心点，考虑改用传参。</span></span><br><span class="line">    index = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> instance <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        instance = instance.split(separator)</span><br><span class="line">        instance = instance[<span class="number">0</span>].strip(<span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 依据实际数据做预处理</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(centers)):</span><br><span class="line">            dis = ComputeDist(instance, centers[i])  <span class="comment"># 遍历寻找距离最近的中心点</span></span><br><span class="line">            <span class="keyword">if</span> dis &lt; minDis:</span><br><span class="line">                minDis = dis</span><br><span class="line">                index = i</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%d%s%s&quot;</span> % (index, separator, instance))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Combiner：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">separator=<span class="string">&#x27;\t&#x27;</span></span>):</span><br><span class="line">    values = &#123;&#125;</span><br><span class="line">    num = &#123;&#125;</span><br><span class="line">    keys = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        line = line.strip()</span><br><span class="line">        key, value = line.split(separator, <span class="number">1</span>)  <span class="comment"># 获取mapper传来的中心点索引与对象</span></span><br><span class="line">        value = np.array(<span class="built_in">eval</span>(value)).astype(np.<span class="built_in">float</span>)  <span class="comment"># 将对象坐标字符串先转化为元组，再向量化</span></span><br><span class="line">        keys.append(key)</span><br><span class="line">        values[key] = values.get(key, np.array((<span class="number">0</span>, <span class="number">0</span>)).astype(np.<span class="built_in">float</span>)) + value  <span class="comment"># 逢相加，必先统一格式！</span></span><br><span class="line">        num[key] = num.get(key, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">set</span>(keys):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s%s%s%s%s&quot;</span> % (key, separator, <span class="built_in">str</span>(<span class="built_in">tuple</span>(values[key])), separator, num[key]))</span><br><span class="line">        <span class="comment"># 将向量先转化为元组，再字符化，以保持格式。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>Reducer：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">separator=<span class="string">&#x27;\t&#x27;</span></span>):</span><br><span class="line">    Num = &#123;&#125;</span><br><span class="line">    keys = []</span><br><span class="line">    values = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        line = line.strip()</span><br><span class="line">        key, value, num = line.split(separator, <span class="number">2</span>)</span><br><span class="line">        value = np.array(<span class="built_in">eval</span>(value))  <span class="comment"># 将局部坐标和向量化</span></span><br><span class="line">        num = <span class="built_in">int</span>(num)  <span class="comment"># 将局部计数和整型化</span></span><br><span class="line">        keys.append(key)</span><br><span class="line">        values[key] = values.get(key, <span class="number">0</span>) + value</span><br><span class="line">        Num[key] = Num.get(key, <span class="number">0</span>) + num</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">        center = values[key] / Num[key]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;&#123;&#125;(&#123;:.2f&#125;, &#123;:.2f&#125;)&#x27;</span>.<span class="built_in">format</span>(key, separator, center[<span class="number">0</span>], center[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬取4399双人小游戏时间信息并分析</title>
    <url>/posts/eea1d0d0.html</url>
    <content><![CDATA[<h2 id="python爬取4399双人小游戏时间信息并分析">python爬取4399双人小游戏时间信息并分析</h2>
<hr>
<p>先列上在这个案例中我学到的正则表达式筛选标签内容的方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">re.sub(r&#x27;&lt;[^&gt;]+&gt;&#x27;, &#x27;&#x27;, string)</span><br></pre></td></tr></table></figure>
<hr>
<p>说来惭愧，这是我第一次完全独立写爬虫，并将其与最近学习的数据分析库结合起来使用，我将其记录下来作日后参考与复习，也希望这个案例能帮助到同样需要练练手的同学。</p>
<span id="more"></span>
<p><em>Ps：不得不说4399的url看得我太难受了，新旧网页同时存在，也没个统一……本想爬取全站……但碍于页面跳转的问题，我放弃了原想法，转而选择了一个相对有规律的专题进行爬取</em></p>
<p>下面上代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from matplotlib import pyplot as plt</span><br><span class="line">import re</span><br><span class="line">import pandas as pd</span><br><span class="line">from matplotlib import rc</span><br><span class="line"></span><br><span class="line"># 设置plt生成图片显示中文</span><br><span class="line">rc(&quot;font&quot;, family=&quot;MicroSoft YaHei&quot;, weight=&quot;bold&quot;, size=&quot;16&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取网页html</span><br><span class="line">def getHTMLText(url):</span><br><span class="line">    try:</span><br><span class="line">        kv = &#123;&#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36&#x27;&#125;</span><br><span class="line">        r = requests.get(url, headers=kv, timeout=30)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        return r.text</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 填充存储游戏名和上传时间的字典</span><br><span class="line">def fillGameBox(UrlList):</span><br><span class="line">    try:</span><br><span class="line">        # 创建空列表</span><br><span class="line">        name = []</span><br><span class="line">        date = []</span><br><span class="line"></span><br><span class="line">        # 传入Url列表</span><br><span class="line">        for url in UrlList:</span><br><span class="line"></span><br><span class="line">            # 获得每一个url的html文件</span><br><span class="line">            soup = BeautifulSoup(getHTMLText(url), &quot;html.parser&quot;)</span><br><span class="line"></span><br><span class="line">            # 先粗略获取我们需要的li标签</span><br><span class="line">            for li in soup.findAll(attrs=&#123;&quot;class&quot;: &quot;tm_list&quot;&#125;):</span><br><span class="line"></span><br><span class="line">                # 再对标签内子标签等及其内容进行精处理</span><br><span class="line">                Name = li.select(&#x27;b&#x27;)</span><br><span class="line"></span><br><span class="line">                # 由于findall得到的内容是&quot;&lt;b&gt;xxx&lt;/b&gt;&quot;的形式，我们用正则表达式筛选内容</span><br><span class="line">                for n in Name:</span><br><span class="line">                    # 向空列表中装入我们的筛选结果</span><br><span class="line">                    # 注意，re.sub()语法中最后元素必须为字符串，而n是列表元素，需进行转化</span><br><span class="line">                    name.append(re.sub(r&#x27;&lt;[^&gt;]+&gt;&#x27;, &#x27;&#x27;, n.string))  # 注意，re.sub()语法中最后元素必须为字符串，而n是列表元素，需进行转化</span><br><span class="line">                Date = li.select(&#x27;em&#x27;)</span><br><span class="line"></span><br><span class="line">                # &lt;em&gt;有重复标签，我们通过列表索引取出需要的时间列表</span><br><span class="line">                date_l = [Date[em * 2 + 1] for em in range(len(Date) // 2)]  # &lt;em&gt;标签是两两出现的，所以长度必为偶数</span><br><span class="line"></span><br><span class="line">                # 正则表达式</span><br><span class="line">                for d in date_l:</span><br><span class="line">                    # 空列表装载</span><br><span class="line">                    date.append(re.sub(r&#x27;&lt;[^&gt;]+&gt;&#x27;, &#x27;&#x27;, d.string))</span><br><span class="line"></span><br><span class="line">        # 创建一个字典，将我们的列表内容作values放入，并给出key，以传给DataFrame</span><br><span class="line">        result = &#123;&#x27;name&#x27;: name,</span><br><span class="line">                  &#x27;date&#x27;: date&#125;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 将字典转为DF文件并将数据按月聚合</span><br><span class="line">def dfsort(result):</span><br><span class="line">    try:</span><br><span class="line">        df = pd.DataFrame(result)</span><br><span class="line"></span><br><span class="line">        # 将df[&#x27;date&#x27;]列转化为datetime类型，format需与date中表达方式一致</span><br><span class="line">        df[&#x27;date&#x27;] = pd.to_datetime(df[&#x27;date&#x27;], format=&#x27;%Y-%m-%d&#x27;)</span><br><span class="line"></span><br><span class="line">        # 因为原日期是按天计算，而我们需要得到统计结果，所以将其&#x27;date&#x27;改成了月份并设为index索引</span><br><span class="line">        df[&#x27;date&#x27;] = [i.strftime(&#x27;%Y-%m&#x27;) for i in df[&#x27;date&#x27;]]</span><br><span class="line">        df.set_index(&#x27;date&#x27;, inplace=True)</span><br><span class="line"></span><br><span class="line">        # 按月份分组并统计</span><br><span class="line">        group = df.groupby(&#x27;date&#x27;).count()</span><br><span class="line">        return group</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 由于4399的网页略凌乱……url名称层出不穷，我在这里只选择了双人小游戏分区来实现页面自动翻页功能</span><br><span class="line"># 该函数返回一个含有了各页面url的列表</span><br><span class="line">def getUrlList():</span><br><span class="line">    try:</span><br><span class="line">        UrlList = []</span><br><span class="line"></span><br><span class="line">        # 遍历分区内首页到末页</span><br><span class="line">        for i in range(1, 24):</span><br><span class="line">            if i == 1:</span><br><span class="line">                url = &#x27;http://www.4399.com/special/old_1.htm&#x27;</span><br><span class="line">            else:</span><br><span class="line">                url = &quot;http://www.4399.com/special/old_1_&quot; + &#x27;%d&#x27; % i + &quot;.htm&quot;</span><br><span class="line">            UrlList.append(url)</span><br><span class="line">        return UrlList</span><br><span class="line"></span><br><span class="line">    except Exception as r:</span><br><span class="line">        print(r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 调用plt来展示数据统计结果，这里我选择了折线图，想看看游戏上传数目的随时间的变化</span><br><span class="line">def show(group):</span><br><span class="line">    _x = group.index</span><br><span class="line">    _y = group.values</span><br><span class="line">    plt.figure(figsize=(20, 12), dpi=80)</span><br><span class="line">    plt.plot(_x, _y, label=&#x27;当月游戏上传量&#x27;)</span><br><span class="line">    plt.xticks(range(len(_x))[::5], list(_x)[::5], rotation=45)</span><br><span class="line">    plt.grid(alpha=0.7)</span><br><span class="line">    plt.xlabel(&#x27;月份&#x27;)</span><br><span class="line">    plt.ylabel(&#x27;游戏数目&#x27;)</span><br><span class="line">    plt.legend(loc=&#x27;best&#x27;)</span><br><span class="line">    plt.savefig(&#x27;./01&#x27;)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    result = fillGameBox(getUrlList())</span><br><span class="line">    group = dfsort(result)</span><br><span class="line">    show(group)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>
<p>最后的结果是这样的</p>
<p><img src="eea1d0d0/01.png" alt="效果图"></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
        <category>案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
        <tag>爬虫</tag>
        <tag>matplotlib</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>pytorch使用单机多卡进行后台训练</title>
    <url>/posts/60b4f1e4.html</url>
    <content><![CDATA[<h1>设置当前环境下可见显卡</h1>
<p>需要先设置训练环境中可用的显卡，即<code>CUDA_VISIBLE_DEVICES</code>变量。</p>
<h2 id="linux环境下临时设置">linux环境下临时设置</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export CUDA_VISIBLE_DEVICES=1,2,...</span><br><span class="line"># 此后第一次使用cuda时将应用此设置，即第二行应调用训练程序。</span><br></pre></td></tr></table></figure>
<h2 id="python脚本内部修改">python脚本内部修改</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;1, 2&quot;</span><br></pre></td></tr></table></figure>
<h1>分布式加载并调用训练程序</h1>
<p><code>python -m torch.distributed.launch --nproc_per_node=2 --master_port xxx run.py</code></p>
<p>其中<code>nproc_per_node</code>对应使用的显卡数量，可参考环境内的显卡数量；<code>master_port</code>设置为训练端口，可不加此参数。<code>run.py</code>是训练的主程序，其后仍可添加训练相关的参数。</p>
<h1>后台训练</h1>
<h2 id="让程序后台训练并将输出重定向到指定文件">让程序后台训练并将输出重定向到指定文件</h2>
<p><code>nohup run.py &gt; output.log &amp;</code></p>
<p>其中<code>run.py</code>为训练的主程序，<code>&gt;</code>用于重定向，<code>output.log</code>为输出文件，其类型也可为<code>txt</code>、<code>out</code>等自定类型，<code>&amp;</code>用于后台训练。</p>
<p>还有其他可选参数，自行查找。</p>
<h2 id="结合多卡训练一起使用">结合多卡训练一起使用</h2>
<p>样例为如下：<br>
<code>nohup python  -m torch.distributed.launch --nproc_per_node=2  run.py conll03 -e &gt; conll03.log &amp;</code></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>pytorch</category>
      </categories>
      <tags>
        <tag>pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>VS上配置Anaconda来构建环境</title>
    <url>/posts/e49bf433.html</url>
    <content><![CDATA[<h1>VS上配置Anaconda来构建环境</h1>
<p>  近几年屡次经历需要重新搭建编程环境的情况，相应的也积累了一些经验。在工具上的选择我认为是越轻量越好用，便于移植的环境会让人使用时很有.….…安全感？</p>
<p>  因此我选择使用VScode作为编译器，并配置Anaconda来完成版本控制，也让电脑内的环境相对干净一些。</p>
<p>  在这篇文章里记录一下流程与遇到的一个问题。</p>
<ol>
<li>
<p>下载Anaconda，并将conda指令配置到系统环境变量。</p>
</li>
<li>
<p>下载VScode。</p>
</li>
<li>
<p>在VS的扩展里下载python支持。</p>
</li>
<li>
<p>在cmd（或conda GUI）里使用<code>conda create -n env_name python=需求版本</code>来创建虚拟环境。</p>
<p>使用<code>conda activate env_name</code>来切换到虚拟环境，并通过<code>pip install</code>或<code>conda install</code>来下载需求的包。</p>
</li>
<li>
<p>在VS里使用快捷键<code>ctrl + shift + P</code>来选择所创建的环境内核（或许需要通过资源管理器里在Anaconda文件目录下的envs文件夹里找到对应环境的python.exe）。</p>
</li>
</ol>
<p><font color="red"> <em>tips:</em> </font></p>
<ul>
<li>
<p>由于VS默认根路径是打开项目时所选择的打开文件夹，而非当前文件，故可能会遇到相对路径找不到的问题。</p>
<p>在VS设置中找到<code>Execute In File Dir</code>进行勾选（或在扩展文件python设置项中找到此项进行勾选），可以解决这个问题。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
        <category>环境搭建</category>
        <category>anaconda</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>anaconda</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务器上hdfs集群关于节点间通讯问题</title>
    <url>/posts/9718eb07.html</url>
    <content><![CDATA[<h1><strong>云服务器上hdfs集群关于节点间通讯问题</strong></h1>
<p>在跑MR时，突然发现有的节点间相互call对方的内网ip，持续call不通，导致任务失败。仔细排查一下，发现可能是/etc/hosts的配置有问题。</p>
<span id="more"></span>
<p>由于在云服务器上，通讯间靠公网ip，所以和网上绝大多数查到的配置不同，我给出以下代码：</p>
<p>Master节点：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># inner</span><br><span class="line">内网IP Master</span><br><span class="line"># outer</span><br><span class="line">公网IP Slave1</span><br><span class="line">公网IP Slave2</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>Slave节点：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># inner</span><br><span class="line">内网IP localhost</span><br><span class="line"># outer</span><br><span class="line">公网IP Master</span><br><span class="line">公网IP Slave1</span><br><span class="line">公网IP Slave2</span><br></pre></td></tr></table></figure>
<p>具体应该怎样处理内网IP还看项目需求，可以按照自己的需要更改。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>递归二分法</title>
    <url>/posts/649c2087.html</url>
    <content><![CDATA[<h2 id="递归二分法">递归二分法</h2>
<p>我学到的二分法可以分为常规二分法于递归二分法，后者为帮助自己理解递归做练习。在这里我给出自己写的递归二分法，考虑的数列的升降序，函数中给了参数，默认为升序。</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def binary_search(list, high, item, ascend=True, low=0):</span><br><span class="line">    if not list:</span><br><span class="line">        return None</span><br><span class="line">    mid = (low + high) // 2</span><br><span class="line">    if list[mid] == item:</span><br><span class="line">        return mid</span><br><span class="line">    elif list[mid] &lt; item:</span><br><span class="line">        if not ascend:</span><br><span class="line">            high = mid - 1</span><br><span class="line">        if ascend:</span><br><span class="line">            low = mid + 1</span><br><span class="line">        return binary_search(list, high, item, ascend, low)</span><br><span class="line">    else:</span><br><span class="line">        if not ascend:</span><br><span class="line">            low = mid + 1</span><br><span class="line">        if ascend:</span><br><span class="line">            high = mid - 1</span><br><span class="line">        return binary_search(list, high, item, ascend, low)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    list1 = list(reversed(list(range(10))))</span><br><span class="line">    print(list1)</span><br><span class="line">    result = binary_search(list1, len(list1)-1, 4, False)</span><br><span class="line">    print(result)</span><br><span class="line">    list2 = list(range(10))</span><br><span class="line">    print(list2)</span><br><span class="line">    result = binary_search(list2, len(list2)-1, 7)</span><br><span class="line">    print(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>二分法</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>使用IDEA打jar包后出现“无法找到主类”的错误</title>
    <url>/posts/883aa23a.html</url>
    <content><![CDATA[<h2 id="使用IDEA打jar包后出现“无法找到主类”的错误">使用IDEA打jar包后出现“无法找到主类”的错误</h2>
<p>我在分别尝试使用Eclipse和IDEA编写mapreduce程序时，相同的环境与代码，IDEA打出的jar包会报“无法找到主类”的错误。网上找了下，别人说要加上一段指定主类的代码，可是我的原代码中已经写过了，对比了两边的pom文件，我怀疑是放置代码的位置有问题。</p>
<span id="more"></span>
<p>IDEA自动生成的pom中build是这样写的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">	&lt;pluginManagement&gt;</span><br><span class="line">      &lt;plugins&gt;</span><br><span class="line">		&lt;plaugin&gt;</span><br><span class="line">		&lt;/plaugin&gt;</span><br><span class="line">		...</span><br><span class="line">      &lt;/plugins&gt;</span><br><span class="line">    &lt;/pluginManagement&gt;</span><br><span class="line"> &lt;/build&gt;</span><br></pre></td></tr></table></figure>
<p>而Eclipse中没有<code>&lt;pluginManagement&gt;&lt;/pluginMagagement&gt;</code>这对标签，我原本是将代码放在<code>&lt;plugins&gt;&lt;/plugins&gt;</code>内部，但考虑到IDEA没有识别这一段代码，我做了修改如下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">	&lt;pluginManagement&gt;</span><br><span class="line">		&lt;plugins&gt;</span><br><span class="line">			&lt;plaugin&gt;</span><br><span class="line">			&lt;/plaugin&gt;</span><br><span class="line">			...</span><br><span class="line">			&lt;/plugins&gt;</span><br><span class="line">	&lt;/pluginManagement&gt;</span><br><span class="line">	&lt;plugins&gt;</span><br><span class="line">		&lt;plugin&gt;</span><br><span class="line">		（新增代码）</span><br><span class="line">		&lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>
<p>最后放上bulid内完整代码以供参考</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span><br><span class="line">      &lt;plugins&gt;</span><br><span class="line">        &lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.8.0&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.22.1&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.7.1&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">      &lt;/plugins&gt;</span><br><span class="line">    &lt;/pluginManagement&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.4.3&lt;/version&gt;</span><br><span class="line">      &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">          &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">          &lt;goals&gt;</span><br><span class="line">            &lt;goal&gt;shade&lt;/goal&gt;</span><br><span class="line">          &lt;/goals&gt;</span><br><span class="line">          &lt;configuration&gt;</span><br><span class="line">            &lt;transformers&gt;</span><br><span class="line">              &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;</span><br><span class="line">                &lt;manifestEntries&gt;</span><br><span class="line">                  &lt;Main-Class&gt;</span><br><span class="line">                    com.hadoop.mapreduce.WordCountMain</span><br><span class="line">                  &lt;/Main-Class&gt;</span><br><span class="line">                &lt;/manifestEntries&gt;</span><br><span class="line">              &lt;/transformer&gt;</span><br><span class="line">              &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;</span><br><span class="line">                &lt;resource&gt;META-INF/spring.handlers&lt;/resource&gt;</span><br><span class="line">              &lt;/transformer&gt;</span><br><span class="line">              &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;</span><br><span class="line">                &lt;resource&gt;META-INF/spring.schemas&lt;/resource&gt;</span><br><span class="line">              &lt;/transformer&gt;</span><br><span class="line">            &lt;/transformers&gt;</span><br><span class="line">          &lt;/configuration&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">      &lt;/executions&gt;</span><br><span class="line">    &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
        <tag>maven</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo的Butterfly主题进行博客配置并部署至Githubpage</title>
    <url>/posts/6a38f8e1.html</url>
    <content><![CDATA[<h1>使用Hexo的Butterfly主题进行博客配置并部署至Githubpage</h1>
<h2 id="前言">前言</h2>
<p>  很久没有使用博客了，自19年初创博客以来，途中历经了域名服务器销毁、域名过期、准备考研等变故，一度无心运营。但人总是贪心与妒忌的，这两天闲下来，在看到别人漂亮博客的时候，自己也起了心思，便花了一个下午重新搭建起来。此番一切从简，希望能长久写下去。</p>
<p><font color="red"><em><strong>本文步骤仅基于Windows平台，其他平台只供参考！</strong></em></font></p>
<h2 id="安装Git与Hexo">安装Git与Hexo</h2>
<p>  可参考<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>。</p>
<h3 id="安装Git">安装Git</h3>
<p>  windows平台通过链接下载并安装<a href="https://git-scm.com/download/win">Git</a>。</p>
<h3 id="安装Node-js">安装Node.js</h3>
<ul>
<li>可使用官方<a href="https://nodejs.org/zh-cn/download/">安装程序</a>进行安装。</li>
<li>也可以在cmd命令行下输入<code>winget install jasongin.nvs</code>通过<a href="https://github.com/jasongin/nvs/">nvs</a>进行安装。</li>
</ul>
<h3 id="安装Hexo">安装Hexo</h3>
<p>  必备安装程序安装完成后，可使用npm安装Hexo。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h3 id="初始化站点文件">初始化站点文件</h3>
<ol>
<li>创建一个blog文件夹。</li>
<li>在该文件夹下打开cmd。</li>
<li>输入<code>hexo init</code>，进行初始化。</li>
</ol>
<h2 id="安装Butterfly并进行配置">安装Butterfly并进行配置</h2>
<p>  仅记录我所使用的步骤，详情可参考Butterfly<a href="https://butterfly.js.org/">官方文档</a>。</p>
<h3 id="安装Butterfly">安装Butterfly</h3>
<p>  在Hexo文件夹根目录下，输入如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<h3 id="配置">配置</h3>
<p>  安装完成后，参考<a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D">官方文档</a>进行后续配置。</p>
<h2 id="部署到githubpage">部署到githubpage</h2>
<h3 id="创建仓库">创建仓库</h3>
<ol>
<li>创建一个public仓库。</li>
<li>取名为：<code>用户名.github.io</code>。</li>
</ol>
<h3 id="设置ssh">设置ssh</h3>
<ul>
<li>
<p>打开git_bash，输入命令<code>cd ~/.ssh</code>，进入到该文件夹后若未报错则可直接使用<code>cat</code>指令获取该文件夹下的<code>id_rsa.pub</code>密钥。</p>
</li>
<li>
<p>若上一步骤报错，则此前未配置过ssh，进行如下步骤配置：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure>
<p>​		配置完成后输入<code>ssh-keygen -t rsa -C '上述邮箱'</code>进行生成，并复制<code>id_rsa.pub</code>内的key。</p>
<h3 id="将key配置到Github账户">将key配置到Github账户</h3>
<ul>
<li>在git主页下找到settings。</li>
<li>进入到<code>SSH and GPG keys</code>子页面。</li>
<li>选择<code>New SSH key</code>。</li>
<li>将刚刚所复制的key进行粘贴。</li>
</ul>
<h3 id="验证">验证</h3>
<p>  在Git_bash下输入命令：<code>ssh -T git@github.com</code>并输入<code>yes</code>后，提示<code>Hi</code>字样则绑定成功。</p>
<h3 id="上传博客">上传博客</h3>
<ul>
<li>
<p>在博客根目录下打开<code>_config.yml</code>文件，找到<code>deploy:</code>项，修改为：</p>
<blockquote>
<p>deploy:</p>
<p>​	type: git</p>
<p>​	repo: 仓库地址</p>
<p>​	branch: master(或main)</p>
</blockquote>
</li>
<li>
<p>接着安装一个上传工具，输入<code>npm install hexo-deployer-git</code>。</p>
</li>
<li>
<p>进行博客上传，输入<code>hexo deploy(或hexo d)</code>即可上传，上传后页面存在一定延迟未刷新属正常现象。</p>
</li>
<li>
<p>最终博客网址为<code>用户名.github.io</code>。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>githubpage</tag>
        <tag>Butterfly</tag>
        <tag>博客构建</tag>
      </tags>
  </entry>
  <entry>
    <title>关于使用numba对python进行代码加速</title>
    <url>/posts/16a14a08.html</url>
    <content><![CDATA[<h1>关于使用numba对python进行代码加速</h1>
<h2 id="前言">前言</h2>
<p>在处理大量数据时，pandas与numpy对单一元素的处理明显速度过慢。近期在做一篇论文的复现时，面对十万的数据集，需要做五折交叉验证，我的机器在jupyter中运行了一晚上都没有完成一半的处理，让人十分苦恼。</p>
<span id="more"></span>
<p>于是我将目光转移到各类python代码的加速方法上，常见的有Pypy，cython，numba。经过一定的了解与比较之后，我认为numba的上手难度最低，使用方法最为简单，于是将numba库引入我的代码。</p>
<p>现在对约50w条数据的处理用时只需8min多。<br>
<img src="16a14a08/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png" alt="交叉验证"></p>
<h2 id="正文">正文</h2>
<p>虽然numba的各类文档中都提到了其使用方法很简单，调用装饰器即可，但实际使用过程中，将一篇已经完成的，使用了不少第三方库的python代码转换成经numba加速的形式，仍然会有许多困难。</p>
<h3 id="函数参数的选择">函数参数的选择</h3>
<ul>
<li>numba是完全支持numpy的内容的，np.array可作为参数直接传入。</li>
<li>尽量使用数字类型、numpy中的类实例作为参数，因为numba大概率不认识原生python中的数据类型（出于运算速度的考虑）。</li>
<li>同上一点，list是不受支持的！（起初的原因是出于反射机制对性能的降低，但官方似乎已经在处理这个问题，相信在未来的numba版本中会得到改善）。</li>
<li>pandas的df类型无法作为参数传入，但由于df中的series是等同于np.array的，可以提取series转化成np.array来传参。</li>
</ul>
<h3 id="使用范围的界定">使用范围的界定</h3>
<p>出于参数选择上的种种限制，用numba来重写的函数主要应该处理数值工作，如果遇到符合类型，如基于Dataframe的数据处理，需要手动将运算函数拆分出来。同时，如果要将numba运用到类成员函数上，需要参考官方文档对类进行声明，否则无法识别。</p>
<h3 id="装饰器参数">装饰器参数</h3>
<p>@jit常用的参数有nopython，nogil，parallel，均为布尔类型。</p>
<ul>
<li>nopython为True时，等同于@njit，numba会检查函数是否为非python的函数，即是否可以用c来完全重写。</li>
<li>nogil，去除GIL锁。诚然，python的低效率原因中，GIL的存在占了很大分量，numba可以让函数脱离GIL，实现真正的多线程。</li>
<li>parallel，自动并行化，此选项对矩阵运算提速有明显效果，虽然离numpy的ufunc方法仍有差距，但已经有相当的改善，同时，numba中采取vectorize装饰器写出的运算函数也可以让矩阵运算提速，但仍不及ufunc。</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
        <category>numba</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>numba</tag>
        <tag>代码提速</tag>
      </tags>
  </entry>
  <entry>
    <title>关于在nginx上配置hexo（二）</title>
    <url>/posts/8b906cb8.html</url>
    <content><![CDATA[<h2 id="在nginx上配置hexo（二）">在nginx上配置hexo（二）</h2>
<h4 id="意料之外的错误">意料之外的错误</h4>
<p>  开始写hexo配置相关（一）时，我本以为我的blog就可以这样正常进入beta阶段了━┳━　━┳━。没想到的是，在尝试引用图片为我的博客添色后，我发现我的图片仅仅能在运行hexo s时，通过4000端口访问。</p>
<span id="more"></span>
<h4 id="挣扎历程">挣扎历程</h4>
<p>  我一开始觉得是引入方式的问题，翻阅<a href="https://hexo.io/zh-cn/docs/asset-folders"><font color="red">官方文档</font></a>后，我改用了标签方法进行引入，没有效果。然后重新在网络上搜索文档，看大佬的博客，始终没得到答案。后来在<a href="http://blog.objectspace.cn/"><font color="gren"><em>Object</em></font></a>的博客中看到了他的联系方式，在QQ上与他交流后我对hexo的实现过程才算有了清晰的认识，在这里贴上示意图。</p>
<p><img src="8b906cb8/01.png" alt="Hexo结构图"></p>
<p>  但是略有遗憾，<font color="gren"><em>Object</em></font>的hexo配置是在个人机上的，与我的环境终究不是完全相同，有一些问题我们还是没能够解决。</p>
<p>  在自己继续折腾了一个下午后，我确认自己的hexo配置没有问题，就开始把目光转移到nginx上，我怀疑是nginx配置有问题，但我没能够发现。万般无奈，我便把希望寄托在了万能的网友身上(●’◡’●)，随手在QQ群里搜索到了Hexo的大群，进去提出了我的疑问。</p>
<h4 id="解决方案">解决方案</h4>
<p>  事实证明，网友还真是万能的（^o^y），<a href="https://www.zonelyn.com/"><font color="gren"><em>睡初雪</em></font></a>提出我的nginx配置确实有问题，我们需要让nginx也能检索到图片，在图片类型检索里将root改成网站放置的目录就可以啦！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location ~* ^.+\.(jpg|jpeg|gif|png|bmp)$ &#123;</span><br><span class="line">	access_log off;</span><br><span class="line">	root /usr/local/hexo/public;</span><br><span class="line">	expires 30d;</span><br><span class="line">	break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  这里我就是将这串代码加在了<code>location /&#123;&#125;</code>的下面。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>网站配置</tag>
      </tags>
  </entry>
  <entry>
    <title>关于糟糕的宿舍</title>
    <url>/posts/e486a907.html</url>
    <content><![CDATA[<h2 id="font-color-00008b-三期-font"><em><strong><font color="#00008b">三期</font></strong></em></h2>
<p><em><strong>  灰黄铺陈的走廊，</strong></em></p>
<p><em><strong>  暗红近褐的木门，</strong></em></p>
<p><em><strong>  刺眼亚白的大厅；</strong></em></p>
<span id="more"></span>
<p><em><strong>  粘稠的，</strong></em></p>
<p><em><strong>  蠕动的肉体；</strong></em></p>
<p><em><strong>  破烂不堪的纱窗，</strong></em></p>
<p><em><strong>  微薄的风掀起闷热的尘土味；</strong></em></p>
<p><em><strong>  这已是恩赐，</strong></em></p>
<p><em><strong>  在喑哑的上铺，</strong></em></p>
<p><em><strong>  拖曳癫狂的夜晚即将到来。</strong></em></p>
]]></content>
      <categories>
        <category>写作</category>
        <category>诗</category>
      </categories>
      <tags>
        <tag>吐槽</tag>
        <tag>三期宿舍</tag>
      </tags>
  </entry>
  <entry>
    <title>关于在nginx上配置hexo（一）</title>
    <url>/posts/bb868060.html</url>
    <content><![CDATA[<h2 id="在Nginx上配置Hexo（一）">在Nginx上配置Hexo（一）</h2>
<p>因为在git上放blog时对速度不满意，我改将其放在我的学生服务器上（<font color="red"><em>阿里云轻量应用级</em></font>(●’◡’●)）……具体参考了CSDN上的一篇博客，链接我放在了首篇博文里，在那篇文章中我也提到了我做出了些细节上的改变，也就是我遇到了一些问题，下面给大家分享一下：</p>
<span id="more"></span>
<p>  1、由于我的nginx是此前就已经配置好了并使用过的……在跟着blog走到最后时才发现访问hostname进不到hexo的初始页面里去，就网上搜了一下hexo配置相关，有了一些理解：<br>
<br><br>
<s>  我们创建了三个文件夹，分别在/Documents/myHexo （这个是工程目录），/usr/local/blogRepo （网页配置文件，），/usr/local/hexo（网页文件）。当我登录域名时，总是进入到hexo下的index.html，尽管在hooks里创建了钩子，却感觉完全没有起作用**（<font color="blue">如果有朋友知道是什么原因的话，恳请邮件告诉我，我的联系方式在首篇博文里</font>）**。我的解决方法是将nginx配置文件中server{}里root /<br>
修改为了/Documents/myHexo下的public目录，然后再进行访问就能看到hexo页面了( •̀ ω •́ )✧。</s><strong>（<font color="red">后注：</font>关于这一段，我的讲述有一些问题，我在（二）中有进行重新理解，大家可以去看看。）</strong></p>
<p>  2、如果在从git上克隆theme的过程中遇到这样的问题：“Please make sure you have the correct access rights and the repository exists.”，我给出这样的参考，<a href="https://blog.csdn.net/jingtingfengguo/article/details/51892864"><span style="color: green; font-style: none;">博文在这</span></a>。</p>
<p>  3、还有一些易察觉的错误，我参考了这篇博客，<a href="https://www.jianshu.com/p/8681ab76da08"><font color="green">一样放上链接</font></a>。<br>
<img src="bb868060/view.png" alt="This is an example image"></p>
<p>  4、还有一些拓展功能时遇到的问题，对应的网页我已经遗失了（╮（╯＿╰）╭）……但不出意外的话在网上都能搜索到。最后感叹一下，hexo真好用！ψ(｀∇´)ψ</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>网站配置</tag>
      </tags>
  </entry>
  <entry>
    <title>序</title>
    <url>/posts/334513da.html</url>
    <content><![CDATA[<h1>序</h1>
<p>  本栏目用于记录笔者生活中的一些有感而发，也会掺杂同友人聊天时的有趣片段。图片能唤起我的记忆，但我希望用文字把这些乐趣留在世上。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>快速排列</title>
    <url>/posts/19ca4e7.html</url>
    <content><![CDATA[<h2 id="快速排列">快速排列</h2>
<p>在书中看到的快速排列算法，给的例子是从索引0开始直接快排，在极端情况下（即数组有序），运行时间会极慢，我把其改成从数组中间开始排序……不知道能不能增加其适用性。</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from numpy.random import randint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def quicksort(array):</span><br><span class="line">    try:</span><br><span class="line">        if len(array) &lt; 2:</span><br><span class="line">            return array</span><br><span class="line">        else:</span><br><span class="line">            n = len(array) // 2</span><br><span class="line">            pivot = array[n]</span><br><span class="line">            array2 = array[:n] + array[n+1:]</span><br><span class="line">            less = [i for i in array2 if i &lt;= pivot]</span><br><span class="line">            greater = [i for i in array2 if i &gt; pivot]</span><br><span class="line">            return quicksort(less) + [pivot] + quicksort(greater)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    l1 = list(randint(0, 100, 30))</span><br><span class="line">    print(l1)</span><br><span class="line">    print(quicksort(l1))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>递归</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>关于遗忘</title>
    <url>/posts/9fab2168.html</url>
    <content><![CDATA[<h1>关于遗忘</h1>
<blockquote>
<p>“你还记得他的样子吗？”</p>
<p>“当然记得。”</p>
<p>“那声音呢？”</p>
<p>“……”</p>
</blockquote>
<p>这是今天偶然看到的一段对白，引起了我关于遗忘的一些想法。</p>
<p>于我，一些本就没什么联系的人、一些本就不太看重的物事，自谈不上遗忘，就算忘了也无关痛痒。将此二字反复描摹的，是我已逝去十五年的爷爷。</p>
<p>爷爷的遗像摆放在我房间里，老人家的模样依然在脑海里依然鲜艳，可当我尝试回忆他的声音，我本来无比熟悉的声音时，却一片空虚。这是令人焦虑的，我越过声音，细细会议他的说话方式，却又能记得清楚，一些口癖，我甚至能模仿出来，但唯独声音，唯独声音在我的回忆里没留下痕迹。</p>
<p>这是难以弥补的遗憾，在爷爷去世的年代里，明明已经有了录像设备，明明已经留下了不少的相片，为何没有存留一份声音呢？一份没有声音的回忆，仿佛在刻意将场景渲染成灰色，提醒着你亲人的远逝。</p>
]]></content>
      <categories>
        <category>《散笔随记》</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇hexo博客</title>
    <url>/posts/de39a815.html</url>
    <content><![CDATA[<h2 id="我放弃了h5-css-js来撰写我的博客">我放弃了h5+css+js来撰写我的博客</h2>
<p>本来想手写个人网站博客的，结果写完静态页面之后突然想到后台和维护工作太繁复了，就改而使用hexo搭建（<s>人家的东西就是好</s>），同时也能学习markdown相关，一举两得了(●′ω`●)</p>
<span id="more"></span>
<h2 id="博客规划">博客规划</h2>
<p>关于这个网站，我想用来写一些blog、吐槽，以及自己写的乱七八糟的东西，因为这些东西全发表在QQ空间里就会很~（你懂得），再加上最近买了个域名，本着不浪费的原则，就利用一下（=′∇`=）</p>
<h2 id="建站参考">建站参考</h2>
<p>有关nginx配置相关的我就不提了，用hexo搭建博客时，我主要借鉴了<a href="https://blog.csdn.net/bskfnvjtlyzmv867/article/details/79063816">这篇文章</a>，其中可能有一些细节出入，碰到问题的朋友可以邮件联络我（aysamu@foxmail.com）</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>测试</category>
      </categories>
      <tags>
        <tag>试验体</tag>
        <tag>联系我</tag>
      </tags>
  </entry>
  <entry>
    <title>电击惩罚与锁链</title>
    <url>/posts/fc81e17b.html</url>
    <content><![CDATA[<h2 id="电击惩罚与锁链">电击惩罚与锁链</h2>
<p><em>本文所谈论与狗相关，勿乱联想。</em></p>
<h4 id="序">序</h4>
<p>叔父将老宅改建作民宿经营，乡下较为空旷，便购置两成年边牧作看家用，唤名八万与九筒。</p>
<p>我要说的与九筒相关，两次见面，一周间隔。</p>
<span id="more"></span>
<h4 id="初">初</h4>
<p>有亲戚离世，返乡奔丧，落脚老宅。</p>
<p>刚下车就察觉一物体飞来，两只爪子在我没来得及反应时扑在了大腿上，脑内重量同冲击取缔了空白，待回过神来，人已踉跄两步。低头，入眼一条头套黑丝袜、面戴白口罩的生物。尽管被人盯上，它丝毫没有悔改的意思，悠哉悠哉地扭头走了几步，再转身，助跑，扑来…</p>
<p>意外的是，夜间九筒并未被主人关起，它用一道黑影回复了我们。</p>
<p>原本以为是一条不归家的狗，临近睡前它竟溜了回来，在门前扒拉扒拉、嗷呜嗷呜，和门内的八万一同唱双簧，将我们折腾到半夜才得以入睡。</p>
<h4 id="次">次</h4>
<p>国庆，返乡看望奶奶。</p>
<p>抵达时已是晚十点，在车上听叔父说因八万扑倒了一位老太太，给了客人一笔赔偿。八万因此付出代价，被拴在门前空地上。</p>
<p>故下车时迎来了理所当然的平静，随处走走，在遮阳伞下的桌上发现一遥控器状物。询问，得知是电击狗的东西，我想当然以为是电击器，摁下按键，从远处传来一声痛呼。</p>
<p>那是止吠器——搜索之后我才明白。</p>
<p>夜晚，与毛发洁净，与孩子们追逐嬉戏的八万不同，九筒独自趴在一处草中坑地里。我略微走近，出声唤它，未响应。索性蹲在边上，打开手电，再唤，未响应。</p>
<p>许久，我起身走进其领地，它才肯向我走来，它必然不知道有一次电击是我按下的，于我而言，它知或不知都不会影响我的想法和行为。</p>
<p>按住狗头，就能看见充满污秽的狗嘴。毛发已经发硬，随手一抓就能碰到打结的毛。它似乎想对我下口，仅管不是攻击，但我也不会让它得逞，它试图靠近，我就掐住脖子推之开来。</p>
<p>向下按去，九筒自觉趴在地上翻过身来，逗弄一会儿后，我便离去，我只觉可惜。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>狗</tag>
        <tag>九筒</tag>
        <tag>自由</tag>
      </tags>
  </entry>
  <entry>
    <title>理解预训练与微调</title>
    <url>/posts/24b008e7.html</url>
    <content><![CDATA[<h1>引言</h1>
<p>读完bert论文后也一直弄不清楚预训练与微调究竟是何意思，在实际项目中对应怎样的操作，这几天加深了相关的学习，对其概念有了更为现实且深刻的理解。</p>
<h1>预训练大模型</h1>
<p>预训练模型的概念是容易理解的，我们加载预训练模型时，便是加载了别人已经架构完备的网络与其训练好的参数。这些数据通常由大规模的训练得出，若由小型组织或个人来承担，时间与金钱的开销都会相当昂贵。</p>
<p>在实际的nlp项目中，大模型的加载通常会拆分为词表与模型的加载，如代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 加载词汇表。</span><br><span class="line">token = BertTokenizer.from_pretrained(&#x27;bert-base-chinese&#x27;)</span><br><span class="line"># 加载模型。</span><br><span class="line">pretrained = BertModel.from_pretrained(&#x27;bert-base-chinese&#x27;)</span><br></pre></td></tr></table></figure>
<p>出乎意料的简短，所以容易让人混淆模型加载与下游任务间的界限。</p>
<h1>下游任务</h1>
<p>下游任务是我们自己的训练，在不进行微调的情况下，我们所做的几乎全部工作都是架构下游任务的网络与调整数据格式，来完成实验目的。</p>
<h1>在下游任务中使用预训练模型</h1>
<p>这是我此前一直没有犯迷糊的地方，事实上，在加载完预训练模型后，通常会对预训练模型的参数进行冻结，即不进行训练，仅进行使用或预测。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 加载预训练模型。</span><br><span class="line">pretrained = BertModel.from_pretrained(&#x27;bert-base-chinese&#x27;)</span><br><span class="line"># 冻结预训练模型的参数。</span><br><span class="line">for param in pretrained.parameters():</span><br><span class="line">    param.requires_grad_(False)</span><br><span class="line"></span><br><span class="line"># 利用预训练模型来处理数据并输出，此过程中没有进行训练，也没有参数变化。</span><br><span class="line">out = pretrained(</span><br><span class="line">    input_ids = input_ids,</span><br><span class="line">    attention_mask = attention_mask,</span><br><span class="line">    token_type_ids = token_type_ids,      </span><br><span class="line">)</span><br><span class="line"># 显示最后一层的输出格式，在下游任务中只需使用该层数据即可。</span><br><span class="line">out.last_hidden_state.shape</span><br></pre></td></tr></table></figure>
<p>在利用预训练模型得到初步输出<code>out</code>后，在我们的下游任务中可将其作为自己所架设网络的输入。</p>
<p>例如，我希望利用预训练模型来完成一个最简的情感分析的任务，只需要将<code>out</code>作为输入放进我的网络，再针对其特征维度进行一次全连接，以达到二分类的目的即可。于是，我所需要承担的计算量只包含这个分类器的训练，而且由于是基于预训练的模型，其预测结果也许还相当不错。</p>
<h1>微调</h1>
<p>此前一直以为微调是我在训练自己模型时要做的事情，现在看来这个工作比想象中要复杂的多，<code>finetune</code>并不是指数据集格式对齐那样的工作，而是根据数据区别对大模型的参数进行调整，且具有一系列完备的工具与操作流程，还待后续的学习。</p>
<p>再次加以区分，若预训练模型的数据集输出分类为1000类，而本地任务的输出分类为10类，这样数据集有较大差异的情况，需要在微调中解决。</p>
<h1>小结</h1>
<p><strong><font color="red">此次记录的重点便是把微调和下游任务训练区别开来，对架构的理解更为清晰。</font></strong></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>nlp</category>
      </categories>
      <tags>
        <tag>nlp</tag>
        <tag>bert</tag>
        <tag>finetune</tag>
      </tags>
  </entry>
  <entry>
    <title>看过希腊神话后的胡思乱想</title>
    <url>/posts/ced1af00.html</url>
    <content><![CDATA[<h2 id="看过希腊神话后的胡思乱想"><em><strong>看过希腊神话后的胡思乱想</strong></em></h2>
<p>最近在英语课本上读到了希腊神话中的世界起源，虽然此前已经对其混乱有所耳闻，但完整看过后还是相当震惊ಠ_ಠ。</p>
<span id="more"></span>
<p><strong>以下内容纯属个人瞎想，未经考据，如有雷人的错误，还请告知我！</strong></p>
<p>刚开始看的时候，我纯粹抱着猎奇的心态去看盖亚<br>
那一大家子乱七八糟的事，直到看到雅典娜的介绍：</p>
<blockquote>
<p>智慧女神，也是雅典的守护者。</p>
</blockquote>
<p>这才意识到这段神话可能并非为创作而生，而是与政治颇有渊源。不由得想到中国古代的君权神授，可如果是为了政治，为什么主导传播的人没有将其修改为更加符合社会认知的版本？这个疑问也许出于我所接受的文化与西方存在差异，转念一想，西方文学中弑亲，复仇，近亲结姻的故事层出不穷，也许真的是文化差异才使我产生诧异的情绪？</p>
<p>出于对希腊神话的了解甚少，这里也就不继续胡说了，待我有了新的看法和认识，会在此文改正。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>读后感</category>
      </categories>
      <tags>
        <tag>吐槽</tag>
        <tag>希腊神话</tag>
      </tags>
  </entry>
  <entry>
    <title>校园章</title>
    <url>/posts/8c628e9e.html</url>
    <content><![CDATA[<h1>校园章</h1>
<h2 id="一">一</h2>
<p># 末次修改于 19.11.25 by Aysamu</p>
<p>茜色的天空，半抹斜阳在边际无力耷拉着，冷白的灯光散落在教室，与窗外格格不入。</p>
<span id="more"></span>
<p>雨四收回视线，扫过卷成海带结的窗帘，看向了讲台。一个三十多岁的女人正捏着粉笔在黑板上书写，脚下枣红色中高跟鞋的皮面映着些许窗外的余晖，她身后时不时传来窃语，靠近前门的两个男孩子将纸屑捏成团相互扔出，你来我往，乐此不疲；教室中部，互为同座的女生正聊着热门的剧集，而她们前面的男生则在用直尺和两块橡皮给女同桌证明杠杆原理，一脸严肃，似真似假。</p>
<p>所有的嘈杂都在女人转身时溜走，雨四看向她的眼睛，瞪大，试图散发出渴望学习的真挚神采。女人放下粉笔，眼睛从前门扫过，中间，靠窗侧的前排，再到窗边的雨四，迎上他做作的目光。</p>
<p>“雨四，谈谈作者在这段话里想表达什么吧。”</p>
<p>瞪大的双眼一时呆滞，他缓缓起身，垂头瞅了瞅自己空白的书页，眼珠开始向同桌那边偏移。</p>
<p>下课铃响时，其实才不过过去五分钟。雨四蹬着桌下的横杆，双手高高举起，腿逐渐伸直，人靠着椅子向后仰去。这种超大幅度的懒腰，可是仅仅末排才有的权利。</p>
<p># 末次修改于 19.11.26 by 此犬</p>
<p>“呐，虽然我也知道问题的答案，还是谢…谢谢你啊”雨四保持着夸张的懒腰，双手放在脑后，眼神像是游离在电线上的两只鸟雀之间，又像是望向更远，夕阳驻足于他脸上，成了暧昧的红晕。</p>
<p>“嗯”一声嘤咛，穿过教室的吵闹，鸟儿的鸣叫，穿过课桌分明的界限钻入雨四的心里。晚自习铃响，所有的喧闹归于平静，却不知平静的心起了涟漪。</p>
<p>同学入座，体态臃肿的物理老师一脚脚踩着斜阳走入教室，总让雨四有种莫名的压抑。混杂着浓厚方言味道的普通话，驱赶着定律与公式向台下的雨四漫来。他只觉着那台上圆滚的身影逐渐模糊，却又向清晰挣扎着，最终散在了雨四的梦里。</p>
<p>“今天的课就讲到这里，作业是练习册的112-114页，噢，7和9题先不做，大家下课吧。”刚从朦胧中醒来的雨四，不慌不忙的收拾完书本，起身走向门口。“你的练习册忘拿了”雨四摇晃着脑袋低声说“噢，谢谢”，转身埋头进了杂乱的抽屉里。</p>
<p>“呼…”面对空无一人的教室，雨四摇摇头，隐入了月色中。沿着路灯走回家的路显得是那么的漫长，唯一的乐子是每天路边等待自己的石子和学校不远处宠物店门口的那只柴犬。</p>
<p># 末次修改于 19.11. 27  by   藏拙</p>
<p>没有拉严实的窗帘留出一道漆黑的缝。一串钥匙的哗啦声将阿粥的思路打断。</p>
<p>“哦哟，不要一觉得热就脱衣服说过多少遍了”，虽然隔着房门， 女人的声音还是很有力量的传了进来，伴着还有弟弟摆弄玩具窸窸窣窣的声音，“会感冒的你晓得伐？来，把外套穿上”。</p>
<p>阿粥知道下一步女人肯定会去熨板上放下她的包和备课本，然后再推门进来她的房间放鞋，听声音阿粥就知道，今天又是那双枣红色的高跟鞋。</p>
<p>鞋架被安置在了她的房间，阿粥也不喜欢全家每个人换个鞋，她的房间就得被拜访一次，但是家里空间有限，她得体谅一下，阿粥想起父亲说这话时的表情，眼神柔和但是语气笃定，没有反抗的余地。</p>
<p>手上的笔帽在桌上轻轻一点，房门应声而开，跟一丝女人香水味一起进门的还有那抹醒目的枣红色，与家里整体灰蒙蒙的色调不太和谐。女人果然是进来放鞋的，“粥粥，过两天去商店给你买些厚点的衣服，学校上课整天的，冷，让你等我跟我一起回来你也不肯”，阿粥将低着的头抬起来，作为一个不失礼貌的回应，“别看这几天还好，过两天就会突然变冷的，枬城向来都是一夜入冬的”。阿粥的脑海里浮现起今天学校里格外绚丽的夕阳。女人已经换好拖鞋，阿粥已感觉到她想要走过来的身体。</p>
<p>“嗯”，阿粥始终没有看她一眼，用左手抚了一下自己齐肩的短发，空气安静了几秒，她就这样轻轻应了一声。</p>
<p>女人最终没有走过来，一边打开房门一边说着到时候要她自己来选大衣或者是棉袄。阿粥用余光瞟了一眼，确认房间门已经关上了，轻轻呼出一口气。</p>
<p>阿粥瞅了一眼眼前摊开的物理作业，数字七和九上被划上了好看的斜杠，笔墨留下的痕迹有点反光，她思量着，另外一个人的作业上也有着两道这样的痕迹，可也是出自她的手呢。女孩托起下巴，想起上课时身旁站起来的身影，有点高大，有点慌张，有点可爱。想到这里女孩的嘴角忍不住扬了一下，只是又马上克制了回去，像怕人看见一样。</p>
<p>这个夜里，阿粥的梦里好像下了一场雨，四月的雨，如同妈妈走的那一天。</p>
<h2 id="二"><strong>二</strong></h2>
<p># 末次修改于 19.11.28  by  pancy</p>
<p>“哗——”</p>
<p>几乎是拉开窗帘的一霎那间，阳光就猛地争着抢着窜进温暖的屋子里。</p>
<p>阿粥看着窗外白茫茫的一片，伸了个懒腰，想“原来是下雪了啊。”突然耳边有几声狗吠，是那个宠物店的主人早起遛狗经过吧。不一会儿，在白茫茫的雪地上闪过一抹橘黄色的小身影，灵动又欢快。牵引绳拉的不是很紧，明显的能看到小阿柴不断在上窜下跳，圆圆的黑色眼睛满是对这突然降临的冬天的欢心雀跃。昨天晚上的故事一下子就又被藏进了心底。阿粥心想，不如先享受今天的美妙。</p>
<p>“噗——哈哈哈哈”也太可爱了吧。于是阿粥的心情一下子变好起来，差点就要升到了阈值。她轻轻在窗户上哈了一口气，趁着水雾还没散开，用小拇指画了个圆滚滚的柴犬头。刚被笑意带动的双颊又活动了两下，眼睛笑的眯成弯弯的缝。嗨呀，今天要是美好的一天啊。</p>
<p>家里其他人都还没醒，阿粥随便套了件旧外套就出了门，正好碰到宠物店的老板遛狗回程。小阿柴冲阿粥汪了几声，阿粥笑着弯下腰小心拂去阿柴脑袋上的雪水，“要去上学咯，下回见！”</p>
<p>和宠物店小阿柴道了别，阿粥又走到了买早点的阿嬷面前，“阿婆，一份米糕” 阿婆的脸在热气后显得亲切慈祥，“粥粥喔，个要么事来婆婆这里耍，婆婆请你恰早茶喏！”阿粥应下，阿婆平日里对她很好，经常在她没事的早晨喊她来吃点早茶，阿婆的老伴儿，也就是阿公，也会喊阿粥来陪他下下军旗。</p>
<p>在认识阿粥的人眼里，这个小姑娘乖巧懂事，又充满了年轻人的纯真可爱。虽然好像偶尔显示出一点距离感，但是想到粥粥家里情况就又明了了，又余下些许心疼怜惜。</p>
<p># 末次修改于 19.11.29 by Aysamu</p>
<p>…</p>
<p>雪间路上迎来冬日白芒，</p>
<p>他只觉心里空空荡荡，</p>
<p>街道上人潮熙熙攘攘，</p>
<p>这条路走的跌跌撞撞，</p>
<p>诸般坎坷让他迷失方向。</p>
<p>冰冷，潮湿。这是他刚清醒时的感觉，紧接着的，肩膀，后背，大腿，胫骨两侧，从身体各部位传来的阵痛正在逐渐发热，发酵，他能感觉到某些神经元跟着自己一起醒了过来，大脑开始接收这些疼痛。</p>
<p>咬住牙，深吸一口夹杂着排泄物异味的空气，他扶着隔间的墙壁勉强站起。推开虚掩着的，用马克笔或铅笔写上了不少联系方式的门，厕所里已空无一人。他闭上眼，屈辱画面再次浮现在眼前。</p>
<p>呛人的烟味，卑劣的要求，关于作业与考试上的步步退让。可他们竟还不满足，金钱，唯独这一点是他难以妥协的，让他去摸父母的钱包来满足这帮渣滓。罕见的反抗换来的是惊讶，是因挑衅而生的怒火，是肢体的发泄，是毒打。他抱着头，之前种种压榨，他可以视作是因自己优异的成绩引起的嫉妒，他可以告诉自己这是在怜悯这群悲哀的傻瓜，但是被勒索金钱，这让他真切感受到自己是个被欺负的可怜虫，他还不能，至少现在还不能坦然接受。</p>
<p>他又看见了，摔向地面的半截烟，挥舞着的拳头，飞向自己的痰液，和自己相同颜色的校服，以及……渣滓们的背后，突然出现的男生。渣滓们显然注意到了他人的闯入，为首的人瞥了一眼，那男生不做声响，转身背向众人，径直走向小便池。在此之后，他的记忆便不再清晰。</p>
<p>不该来这么早的，给这群混蛋抓了个正着。他有些懊悔，但无济于事。出厕所后，回到教室，他走向自己的座位，靠窗，窗外白的令人有些恍惚。后座的男生已经坐在那里摆弄着早读课本。</p>
<p>“尿的怎么样？”</p>
<p>“还好。”</p>
<p>他坐下，偏过头，伏在桌面上，白色，只有白色。</p>
<p>雨四不在乎别人怎么看他，因为他从来都不是弱势的一方，前面那小子怎么会被人欺负的，不就是因为不会安排自己？换做是他，就不会如此，他懂如何接过话题，他懂如何融入集体，他懂如何去选择立场，很多时候看不到他身边簇拥着人群，只是他不想如此罢了。但这些道理轮不到他来讲，事不关己高高挂起，有那时间操心别人的事，他宁愿放空自己看看窗外那棵挂满银白的，叫不出名字的树。</p>
<p>哦，他叫什么来着，是邱寸，好像是这个吧。</p>
<h2 id="三"><strong>三</strong></h2>
<p>#末次修改于 19.12.1 by 此犬</p>
<p>“蒹葭苍苍，白露为霜。所谓伊人，在水一方。…”</p>
<p>在那双枣红色的靴子踏进教室前，早读声已经溢出了教室。对于雨四而言，早读的氛围让他感觉惬意的很。在这种嘈杂的环境里，雨四总能切实的静下心来，这或许也是雨四喜欢雨天的原因，在他心里，大雨能让城市变得静默，能让自己的思绪随着一珠珠雨滴向无限的彼方延伸，能和同样身处雨下的，自己心系的人，多一种牵绊，孤独却浪漫。</p>
<p>雨四享受此刻的这份孤独，将脚放在了前桌椅子的腿连上，机械的口型足以应付讲台上的女人。他的目光停在了邱…？噢，对，邱寸身上。这样的事情在这所学校里绝不少见，甚至放眼全国的初高中，也是一直为人们所诟病的。青春，是热血，是无虑，是绚烂。但它同样也是轻狂，无知，失控。</p>
<p>无端的恶，更令人胆寒。</p>
<p>因为身材偏胖，他们会笑着称之为“肥猪”，任何与胖相关的词汇出现，你都就将成为班里的众矢之的，无关于你的心情与脸色；因为口音奇怪，仿佛你的每一个发音都是错误，嘴巴就应该闭上；因为孤僻内向，所有的圈子都对你成了壁垒；又或者是因为看起来好欺负，所以去欺负…</p>
<p>而邱寸面对的一切更加严重。</p>
<p>雨四摇了摇头，这并不是他该操心的事。读书声慢慢的退去了，雨四瞥了一眼身旁的女孩，阳光下的她，默着古文里的生僻字，有些耀眼，也有些遥远。雨四苦笑着，缩了缩衣领，趴在桌上，又开始了一天白日梦想家的工作。</p>
<p>待雨四沉沉的睡下，阿粥无奈的摇摇头，她理解同学们多数都会在大课间休息而保证上课的精神，“可这家伙一睡就不醒！也不知道每天晚上在忙些什么！”这样的抱怨终是传不进雨四的耳里。</p>
<p>初中生活，特别对于升学季的学生，恋爱和兴趣像是难以企及的奢侈品。时间总在不经意间溜走，就如同一夜入冬的枬城，窗外这颗无名树的树叶忽地就随风飘散了。但对于落叶，尽管如何飘散，最终他们都会归于泥土，融于大地又将在生命尽头相聚。但人走散了，或许就真的散了。</p>
<p>一天的课程过得很快，路上，南方的寒风，少了冷冽，多了点阴冷。加急了雨四回家的脚步。</p>
<p>“汪—汪—！”</p>
<p>“噢，阿柴呀，今天没时间陪你玩啦！刘叔明天见！”对待那只柴犬，雨四有着罕见的温柔，或者说这么一只可爱的柴犬谁又不爱呢？</p>
<p>雨四的家在街边巷子深处，巷口的棋牌室不分昼夜的营业着，噼里啪啦的声响伴随着骂骂咧咧的方言似乎在和对面烧烤小摊的谈话声争个高下；副食店的老板半眯着眼躺在摇椅上，哼着不知名的小曲儿；一旁的花坛边，几位臭棋篓子又在那较劲了…</p>
<p>“四儿，回来啦？”里屋里传来一声和蔼，微弱的问候。</p>
<p>“诶！奶奶。我马上做饭哈！”雨四熟练的钻进厨房，父母？雨四也时常会思考这两个字的含义，他们生下自己，自己却面对的是无休止的争吵，不欢而散的结局，最后都转身离去，孤僻的孩子从来都是不讨喜的，亲戚的夸奖从来都是无关痛痒的恭维：“孩子都挺可爱的”，雨四当然没有资格走入新的家庭，哪怕一方。</p>
<p>对于他的父母而言，这是一段灰暗婚姻的结束，是想尽快逃离的现场，而对于雨四，却是生命的开始啊。</p>
<p>“呼—”做完家务与功课，用热水洗去一天的疲乏后，陷在床上的此刻是雨四生活中不可多得的悠闲。他拿起自己型号老旧的手机，看着头像是一个女孩伫立于雨中的，指尖缓缓地点开。点开对话框从不是什么难事，雨四经常这么做。</p>
<p>“Hello！”，缓缓删掉。</p>
<p>“在吗？”，缓缓删掉。</p>
<p>“在嘛？”，缓缓删掉。</p>
<p>复杂的数学题和体会作者此处的情感都不曾让雨四如此紧张，谨慎。床上的他翻来覆去。</p>
<p>“在嘛？😄”</p>
<p>按下发送的瞬间雨四将头埋在枕头下，</p>
<p>“她会回嘛？这条消息是不是编辑的不太好？唉，应该在组织一下！或许…会更好？”</p>
<p>雨四的心在胸腔内跃动着，内心的期待似乎又大于本能的紧张，雨四他紧盯着手中发光的屏幕，手指紧张的滑动着屏幕，上滑，下拉，如此反复，反复。</p>
<p>“叮咚。”</p>
<h2 id="四"><strong>四</strong></h2>
<p># 末次修改于 19.12.3  by  藏拙</p>
<p>穿着睡衣的男孩上半身忽的从床上立起，他大概自己也没意识到，这样好可以认真郑重地打开那个小红点，原本裹在头上的枕头也无辜地被弹在一边。</p>
<p>“自动回复——您好，我现在不在，请一会跟我联系。”</p>
<p>瞬间扬起来的心又瞬间荡了下去，像极了玩过的激流勇进里划车溅起的水。雨四像瘪了的气球一般又倒下去，静止了几秒钟，平时走路都带风的男孩子竟在此时微微撇起嘴唇，略显干涩的嘴唇却有着好看的轮廓。</p>
<p>可能只是在忙嘛，没看到消息，又没有什么，我，我也没想干什么，就是问下英语作业是啥，她没看到就没看到咯，我其实也快做完了，老师也讲了那些……雨四也不知道自己跟自己的对话怎么这样混乱，大概是他自己意识到今天没有哪一项作业是他没记清楚的。</p>
<p>夜晚骤冷的空气让他从思绪中抽离了一点，他麻木的、头也不动的任由手去找散落的枕头，再慢慢揪起被子胡乱盖了一下，顺便蒙住了头，但是雨四还不想闭眼睛，他像想起了什么，又摸来手机，看一眼，没有变化，他把手指在侧边的音量按键上，摁到音量到最大，这才好像放心了一点，把手机放到一边，又重新用被子蒙住头，突然很想那只柴犬，想把刚刚暖起来的被窝分享给它，然后看一眼它亮圆的眼睛入梦，确实是很治愈的，雨四闭上眼睛，少年逐渐脱离白日的脾气，任由梦乡与黑夜肆意揉合在一起。</p>
<p>此时，同在枬城的另外一个房间里还亮着，跟雨四房间不太一样的是，偌大的落地窗，每个夜晚都放映着万家灯火的景象；很有质地的窗帘和布艺反着光，与旁边一角的一座擦的很干净的钢琴辉映；桌上妈妈给邱寸送来的牛奶让整个房间里显得异常温馨和谐，如果不知道它已经凉了许久的话。</p>
<p>设计感很强的房间布局不失雅致，同时一些摆件和壁纸也将青春男孩子的气息展示得完整而高级。这些他从小就习惯了，父母都是高教育程度的人，来到这里提供给他的生活怎么说也是比较高质量的了，至少是跟身边的同龄人比。一直以来，在他的眼里，身边同龄人的言行大多有一点幼稚，他对自己的同学也都是不失礼貌也从不亲热，包括那些人，那些丑恶又卑劣的嘴脸，他也依然是存留着心底的不屑的。在他的成长基调里，生活包括学习里的一切他都应付的挺好的，不需要费太大力气或者忍受什么苦难。</p>
<p>他没有挚友，没有可以张牙虎爪嚷着“报仇”的后备兄弟，父母家人面前他必须保持完美的姿态，所以，对于那件事，他未曾露出半点声色，哪怕是脸上最显眼处挂的彩，他也可以以打球所致编出精致的谎言让人永远不会怀疑。基本上除开自己，无人问津，唯一今天有一个女孩子，无意看到他嘴角的鲜红，顺手给了他一张纸巾。</p>
<p>邱寸站起身把外套脱下挂在椅子背上，里面只穿了一件短袖体恤，若隐若现的锁骨隐约彰显了皮肤的温度，白皙但是几处伤痕俨然可见。穿着单薄的男孩子走到窗前，抱臂站定。</p>
<p>他最喜欢那面落地窗，从小就喜欢，小时候他可以贴在窗前看很久很久，把小手盖在眼睛旁，看白天的蓝天或是晚上的星火，他说过觉得那面窗像是一块屏幕，放着一部大电影一样。</p>
<p>他已经很久没有贴在那面窗户上过了，现在也只是站得很近，枬城的万家灯火在眼前这块屏幕上闪烁，火树银花，邱寸觉得又极像脑海中抹不掉的那些散落的、还未熄灭的烟头。他伸出一只手将窗帘拉上，关掉了屏幕的开关，黑屏对于他来讲就是一天的结束。</p>
<p>邱寸熟练地将牛奶倒入废桶，关灯，上床。过夜的牛奶和那些用过的药用棉签，会在第二天早上被处理掉。</p>
<p>邱寸妈妈看见儿子房间的灯熄了，缓缓从客厅沙发起身准备回房，走到门口还是忍不住转身凑近听了一下儿子房间的声音，一片寂静，才又扭头回自己房间上床上坐着。身边邱寸爸爸已经睡着，她的嘴里呼出一口气，不知道是叹气还是疲惫的原因。</p>
<p>母亲总是敏感的，她总觉得儿子从什么时候开始都有些不对劲，虽然他向往常一样听话礼貌，但是她还是觉得有些异常。从有一天早上，她收拾儿子房间，意外发现儿子的杯子牛奶被喝光了，晚上给他送牛奶的习惯从小就有，不过他从来都喝不完一整杯，每天早上邱寸妈妈都会来清洗那个还有一兜儿牛奶的玻璃杯，只是那天之后，每回都是空的，甚至都杯壁奶白色的印渍都很淡，她甚至跟丈夫讲过这个细节，不过丈夫当即笑了，说她上年纪了这么多心。</p>
<p>她无言以对，她何尝不希望是自己多心，她知道儿子一直很优秀，至少目前为止，儿子很对得起她多年的悉心培养和努力，作为母亲她其实并不在乎儿子现在成绩有多好，才艺有多出色，别人有多么称赞她教导有方，她希望的是自己的孩子在健康快乐的同时，能成长为一个有修养而又正直的人，能够独立处理一些事情，能力和品质能够匹配他自没有己的野心，能在这个优胜劣汰的社会里选择属于自己最大的自由。她也强烈地害怕着，怕她爱的孩子在长大的这一路上出现什么意外，她不知道这种意外具体是什么，只是她的人生经验在告诉她，她需要时刻注意着，警惕着。</p>
<p>妈妈的眉头一直微微皱着，仿佛有一根线提溜者让它们无法放松，她看了一眼手机，有一条未读消息，是小寸老师发来的，说是让邱寸去市里参加一个物理竞赛，入围的还有班上另外一个女同学，叫阿粥。她回复了好，想着明天早上早餐时跟儿子讲，于是一边躺下盖上被子，脑子里计划着明日早餐鸡蛋的做法。</p>
<p>枬城冬日的夜过的不快不慢，眼睛睁开翻个身闹铃也就响了，刚好让人觉得有点没睡够大脑却又已经愈发清醒，雨四不舍地掀开被窝，奶奶在厨房大声喊着，四，是喝杂粮粥还是下面条？他一边穿衣服一边在大脑中做出抉择，</p>
<p>“那个，昂，粥，我想喝粥”，少年蓬松着头发答到。</p>
<p>奇怪的选择，奶奶可不觉得孙子还会喜欢喝粥，不过也可能是吃面条多了想换换口，那就在粥里加点昨天熬的骨头汤。</p>
<p>奶奶端出的食物是那样诱人，煎的亮面微黄的鸡蛋饼里镶嵌着暗绿焦香的葱花，泛着油光冒着热气，小碟子里面装的咸菜先一筷子淹没在颜色厚重的粥里，再挑起一团趁还没被冷空气侵略赶紧送进嘴里，居然在唇齿上碰撞出绝香的味道，他竟之前都不觉得粥是这样美好的食物。</p>
<p>年轻的男孩子吃饭很快，三下五除二，是奶奶生气警告了多少遍也没用的事，“吃好了，奶奶你慢慢吃，我上学去了”，嘴里嚼着最后一口鸡蛋饼，抓起书包，门就“砰”的一声。留下奶奶无奈地笑笑，慢慢收拾起饭碗，脸上的皱纹和褐色的斑点像是一幅幽深而有味道的画。</p>
<h2 id="五"><strong>五</strong></h2>
<p># 末次修改于 19.12.5  by  pancy</p>
<p>“牛肉薄切，热酒一壶–来咧!”</p>
<p>“一笼肉包!一笼甜糕!再来一碗清汤牛肉面片！”</p>
<p>“小哥，劳烦来一碗梅花汤饼… .”</p>
<p>各色各样的声音交错着响起，寒冬的早晨，冷风冽冽，说话间喷出白雾，模糊了各人的容貌。 街道的角落，蜷缩着一个五六岁的小男孩，他穿着破旧而单薄的衣衫，一双鞋脏污不堪，踩在雪地里，一点儿都不保暖。</p>
<p>裤子早就不合身，露出半截小腿，被冻得通红。小男孩对此毫不在意，睁着一 双眼四处张望着。 他的脸上脏兮兮的，只一双眼如最上成的墨玉，澄澈通透。</p>
<p>有个中年人买了三只大馒头，一碗汤面，吃到末了吃不下，搁下半只馒头和一口残汤。  小男孩便像发现了宝一般紧紧盯着，等中年人一走，他就飞快地从角落里窜出来，一手捡起半只馒头，另一只手端起碗就要往嘴里倒。</p>
<p>他这行为很快就遭到了旁人的嫌恶，那口冷掉的汤还未落肚，一个巴掌就狠狠地落了下来，将整个碗都打翻。  汤汁洒在他身上，那一小块湿掉的衣衫被寒风一吹，紧紧贴在身上，冷冷冰冰的。</p>
<p>“哪里来的脏东西!滚开!”</p>
<p>肌肉横生的壮汉骂骂咧咧着瞪了他一眼，那里面的恶意和嫌弃几乎要化成实质，刀子似的扎在男孩身上。</p>
<p>男孩沉默着捏紧了仅存的半块馒头，小手捏成拳头，默不作声地转身要走。  那壮汉一转眼又看见了他手里的馒头，气不打一处来，“脏东西，你手里拿着什么呢? !半个的大馒头，你还敢白拿不成? !” 那明明只剩那么一小块，一口都不到。</p>
<p>男孩拔腿就跑，壮汉一看他要跑，立刻大步跨过来就要扯他后衣领。他最近诸事不顺，早就想找个好欺负的人磋磨一顿出出气了!</p>
<p>男孩瘦弱，身子又被冻得不甚灵活，才跑两步就跌倒在地，一时没爬起来，就被壮汉一步追上。</p>
<p>那只黝黑凶恶的手就快要拽到他后衣领的时候，突然别处伸出一只手来，捏住了壮汉的手腕。</p>
<p>作为这条街里最威风的刺儿头，壮汉还没有被谁这么大胆地冒犯过。  他勃然变色，气恨地转过头来，想看是哪个胆大包天的无知小儿敢在老虎头上拔毛。</p>
<p>结果一转头，他看见一位模样矜贵的西装男人，笑吟吟地看过来，轻描淡写地将他的手一甩。小巷里突然站出来几个黑西装大汉，看来像是有钱人家的保镖人物。</p>
<p>壮汉心知是遇到了狠角色，往地上吐了口痰，骂骂咧咧的走了。</p>
<p>男人看着小孩儿，“啧，跟着我混吧小屁孩儿，来我店里当个下手。”</p>
<hr>
<p>“哈哈是的，那个小男孩就是二十年前的我。小寸，听哥给你白讲了个故事，是不是也得给我点回报啊。”男人靠在吧台外，笑着对坐在旁边的邱寸说。</p>
<p># 末次修改于 19.12.6 by Aysamu</p>
<p>邱寸是这家茶餐厅的常客了，高高的座椅一字排开，伴着店里流动的轻缓音乐，即便只是捧着杯奶茶，也能体会到片刻的，与生活脱轨的宁静。</p>
<p>他并不理会男人的话语，成篇成篇的故事，说说也就过去，男人有时是外省流亡而来的大盗；有时是光荣的退伍军人，携着满筐军伍轶事；还曾是一位归隐于市的手艺人，条条讲究，信手拈来；当然，时而也如今天所言，流落街头，帮派厮混，金盆洗手。他对男人的来历早已不再抱有期待和过分的好奇，于他而言，身侧的，仅仅是餐厅的老板兼服务员，仅此而已。</p>
<p>男人见邱寸没作声，拍了拍他的肩膀，便忙着接待其他客人去了。邱寸身边又一次的，空无一人。</p>
<p>他放下奶茶，擦了擦嘴，起身背上包，走出店门。室外积雪已被铲至道路两旁，一场雪并不能阻碍人们的正常生活，对他而言亦是如此。他不喜欢餐馆里男人讲的故事，凭什么受到欺凌的人一定会被意外拯救？事实上并不是这样的，那些预定好了的痛苦，只会准时到来，除了接受，别无他法。</p>
<p>他也在心底问过，为什么是自己，但很快，随着频率的提升，他不再问了。</p>
<p>“忍受现在的痛苦，筹划将来的报复。”</p>
<p>他告诉自己，要离开这里，要走到更高更远的地方，要在未来的人生里让这些霸凌者忏悔，要强大到让他们不得不依靠自己。</p>
<p>“忍忍就好了，他们会后悔的。”</p>
<p>他低声呢喃着，不自觉地握紧了拳头。</p>
<hr>
<p>“物理竞赛的事情，你家长跟你说了吧？”</p>
<p>早读的间隙，班主任把邱寸叫到教室外，问到。</p>
<p>竞赛？什么竞赛？估计是妈忘记了。这么想着，但他还是点了点头。</p>
<p>“这次入围的，除了你，还有阿粥，你们这几周可以私下讨论一下题目，那些什么原题网上一搜就有了，自己下去找，哦对了，你进去之后把阿粥叫出来。”</p>
<p>阿粥？昨天递纸的那个女的？噢，原来坐我后面一排啊，以前怎么没注意到。</p>
<p>邱寸踏着阵阵读书声，短短一条走道，此刻竟给了他一种走T台的神圣感，也许万众瞩目，也许光芒耀眼。他敲了敲女孩子的桌角，对上她的眼睛，又往门外瞅了一眼，回到自己的座位上。</p>
<p>女生跨过教室门槛时，邱寸的板凳被踢了一脚，刚回头，后座便凑上来，“啥事啊？”</p>
<p>“跟你没关系。”他抬了抬椅子，向前挪了挪，不明不白的，他又添了些许烦躁。</p>
<h2 id="六"><strong>六</strong></h2>
<p>#末次修改于 19.12.9 by 此犬</p>
<p>“切，说说嘛，又不会怎么样！”</p>
<p>雨四拾趣的缩了缩脖子小声嘀咕着，又坐回了他最惬意的样子。寒风急促的拍打着窗户，夹杂无法相拥温暖着苦恼，烦闷，雨四抬头顺着教室门上的一小扇窗，能看到的只有少女微微发红的半侧脸颊，惹人怜爱，雨四不禁愣了神。</p>
<p>良久，待到那朵红晕走到跟前，四目相对，雨四这才察觉自己的失态，干咳着将目光逃回课本，用朗读声掩盖自己的尴尬，殊不知他的读书声对于早自习是难得一见的稀客。</p>
<p>“看你能硬气多久，一天没收到钱就打你一天。”</p>
<p>邱寸颤颤巍巍的从肮脏的地面上爬起来，但若有若无的臭味始终缠绕着他，很难想象从一个少年的眸子里有着如此的沉着与深邃，他拧开水龙头，慢条斯理的清理着身上的污垢，他低下头，捧一手水，将脸浸入…</p>
<p>午餐的时间对于学生来说往往是匆忙的，雪后，白茫茫的地在下课铃声后很快添上了脚印，有的爬向食堂，有的爬向校门口推着餐车的叔叔阿姨们。对于吃饭，学生们的选择很单调，三五成群在食堂，或者订餐，打包回教室。</p>
<p>“那就说定了，那天咱们在学校门口集合吧。”</p>
<p>“嗯，好的。”</p>
<p>雨四拎着打好的饭菜回到座位，前桌邱寸斜坐着和阿粥商量着什么，</p>
<p>“在聊什么呢？”</p>
<p>“没什么，不关你事。”邱寸冷冷地转身过去，对雨四，他总是有种天然的敌对感觉。</p>
<p>雨四耸了耸肩，不自觉地叹了口气，身边的阿粥，对于自己只有一道课桌的间隙，却怎么也没有勇气和她搭搭话，对阿粥，雨四也不太懂自己的心思，喜欢？自己也说不清喜欢她的哪一点，甚至连了解她都说不上。普通同桌？她却总能抓住自己的目光…</p>
<p>“那个，昨天晚上…”阿粥摆弄着碗里惹人讨厌的芹菜，细声道。</p>
<p>“雨四！”一声清脆，划破了冷的肃杀。</p>
<p>＃末次修改于 19.12.12 by pancy</p>
<p>“我听奶奶说你周末有时间诶！我们去后山玩吧！” 女孩子清脆的声音好像永远充满着活力和愉快。</p>
<p>是亓官，隔壁亓叔叔家几年前领养的小妹妹，明明是跳了两级才和雨四一个班，却总是不大不小的。就算爸爸妈妈教了多少遍喊对门的他哥哥，还是一直喊全名。</p>
<p>亓官刚染了头，扎了俩小辫，明明是很叛逆的造型，一张小圆圆脸又奇妙的柔和了棱角，整个看起来还蛮可爱。</p>
<p>雨四对这个一直被宠着的小妹妹还是蛮照顾的，小时候亓叔叔和亓阿姨工作太忙，总是把小姑娘一个人丢家里看书看电视。</p>
<p>但小孩子总是玩心很重，官官还不是个标准的乖孩子，在家门口第十六次拿蚂蚁做“实验”的时候，她看见了对门的雨四正好拎着一袋菜市场买的土豆回家。</p>
<p>于是天天跟在他屁股后面“雨四”“雨四”的喊，雨四也开始认识到一个小姑娘能有多皮。</p>
<p>要不是亓叔叔和亓阿姨总是拜托雨四喊亓官回家吃饭，可能雨四永远不会想的到，一个小女孩能出现在这么多神奇的地方。</p>
<p>枬河边常年停泊的小渔船上、枬城纺织厂大铁门两边的柱子顶上、老水塔的第二层砖头门里、小学旁边水厂运水桶的履带上……</p>
<p>一个从隔壁孤儿院来枬城生活的小姑娘却像是原来就属于枬城一样，雨四曾经以为亓官就是个一直保持快乐的没什么烦恼要考虑的小朋友，但是又总能看见她一个人坐在城市边的海域边缘线上看着大海发呆。</p>
<p>海风很大，小姑娘两只手撑着石砖地面，头发被吹起吹下，海浪也前赴后继。落日熔金，暮云合璧，整个场景就像是一幅静止的画面，一首无声的歌。</p>
<p>亓官面上没有难过的表情，却让人感觉好像听到了她再和你讲一件很悲伤的事情。估计谁见了这一张画卷，都没办法再忘记。</p>
<p>“哎哎哎！快理理我！”亓官拉了个椅子，坐在了雨四旁边的过道上，拍了拍他桌子上的书。  听起来是有点生气的语气，但是她快笑出纹的眼角又像只是在说普通的笑话。</p>
<p>“大冬天的，你就不能在暖和屋子里呆着吗？” 雨四脑子里还没想到最近究竟有个什么事情是有阿粥有参加的，还有她刚刚是想说什么呢？</p>
<p>解释吗？还是什么呢？</p>
<p>“切！你不去我自个儿去！山上延福寺的冬景可好看了，我上次还和一个小和尚约了只烧鸡！”</p>
<p>“嗯？延福寺吗？是那个祈福很灵的寺庙？”旁边路过的同学听到亓官的话，停了下来询问。</p>
<p>亓官见有人对自己说的有兴趣，立马转过身去叽叽喳喳起来。</p>
<p>好像是有很久没去后山了？雨四一下子发现自己跳到了亓官的频道，立马打住，转头看向阿粥想继续之前的话题。</p>
<h2 id="七"><strong>七</strong></h2>
<p># 末次修改于 19.12.13 by Aysamu</p>
<p>“昨天晚上我睡得太早啦…今天起来才看到你的消息。”阿粥总算是说出了口。</p>
<p>雨四一愣，头一歪，嘴角一斜，“没事的，没事的。“</p>
<p>“嗯！”芹菜被夹到了倒置的碗盖上，小姑娘压下了头，专心地夹起一筷子米饭。</p>
<hr>
<p>是日夜，后山，祈福寺，白雪作幕，青竹围屋。</p>
<p>寺前有一方石桌，桌旁又设有四柱圆凳。一放学便赶来的少年，将褶皱的的书包随意摊在桌面，独自坐在凳子上。</p>
<p>“今夜八时至十二时，枬城上空有望观测到近三十年来规模最大的流星雨，有心的市民可以自寻空旷处欣赏。”</p>
<p>早间新闻里的播报仍记在他脑海，他已事先和家里人打过招呼，今天会晚点回去。他依稀记得，当人类开始仰望星空时，人类也开始了对自身终极问题的思考。如他这般，无法从校园生活中获取哪怕丁点快乐的人，自然需要有所爱好，与其说是爱好，也许用寄托来形容更为得当。</p>
<p>校园这个字眼一浮现脑海，那数张丑恶嘴脸紧跟着冒了出来。“啧”，他正打算摇摇头，给自己物理洗脑时，忽的，又记起一张清秀的面庞，她数缕散乱在额前的刘海，她微微上翘的睫毛，闪着光的眼睛，悦耳清甜的声音。</p>
<p>他又想讨论讨论物理竞赛了。</p>
<p>要不要找机会跟老师提提要求，借着学习的理由，把自己的座位调到她身旁？以自己的成绩，老师应该不会拒绝的。</p>
<p>邱寸把包拿起，抱着包，踩着圆凳，坐到了石桌上。他仰起头，天的一角正划来若干光点，漆黑的幕布先被映成深蓝，伴着，更多的光出现了，撕开幕的一角，向日落的地方追去。他眼里是天上的星辰，心里却挂念着，她眼里的星辰。</p>
<p>“她也是我这夜里的流星吗?”</p>
<hr>
<p>“你知道吗？昨天夜里有流星雨耶！”亓官拎着盛着豆浆油条的塑料袋，赶上前面的雨四。</p>
<p>“啊？新闻里说了啊，但是太晚了，作业还挺多，我就直接回家了。”他刚打完一个呵欠，正用袖子擦拭眼泪。</p>
<p>“我也是！昨天作业真是真是太多了！写的手都酸了我！”女孩子气鼓鼓地说道，空挥着拳头，似要将什么砸碎。</p>
<hr>
<p>阿粥昨夜睡得也不早，倒不是因为作业，她特意将手机的通知打开，放在书桌旁，自己则随意翻看起一本书来。</p>
<p>“冬日的阳光穿过窗，拥抱发黄的扉页，连带着，将笔杆拉出一条长长的影子。”她觉得很好，继续向下看去。</p>
<p>“我的笔尖在行间拉开花来，墨水浸着纸张，向外染去，清香的气味嗅入鼻腔，我正是在等这一刻，等阳光将这行未干的墨汁点亮，于纸面上。”</p>
<p>她觉得很好，即便铃声未响，她仍觉得很好。</p>
<hr>
<p>“你昨天去看星星了？”</p>
<p>“嗯。”</p>
<p>“一个人去的吗？虽然我们平时管你管得松，你也要注意自己的安全啊，大晚上一个人去多危险！下次不要这样了！”</p>
<p>“没事的。”</p>
<p>“你这孩子……”</p>
<p>母亲来不及多说些什么，邱寸已经溜出了家门。今早的心情还不错，邱寸决定给茶餐厅老板一个面子，点一顿丰盛的早餐。他走出家门前的街道，经过拐角，手轻抚过电线杆上的灰尘，弹落，抬首，两三黄毛青年正依靠着墙。</p>
<p>他们瞥了眼校服上的图案，互相对了对眼神，又向邱寸走来。</p>
<p>“你是不是邱寸？”</p>
<p>他后退，“干什么？”</p>
<p>“你小子家挺富的吧，借点钱我们买包烟呗。”</p>
<p>邱寸转身，拉开腿向后跑去，刚起步，衣后领被人拽住。</p>
<p>“放开我！放开我！”他挣扎叫喊，但无人回应。</p>
<p>……</p>
<p>邱寸从地上爬起，默默清理校服上的尘土，从被翻乱的包里拿出一包纸，抽出一张，将方才恐惧惊慌之中流出泪水的眼角擦拭干净。片刻，他背上包，继续向前走去。</p>
<p>#末次修改于 19.12.15 by 此犬</p>
<p>来到茶餐厅，愉快的清晨被突如其来的黑色笼罩，他随意的找了个座位坐下，看着面前纯白的桌布有些发愣。</p>
<p>从邱寸进门起，老板便注意到了他，皇甫烈和平常一样，着一身灰色的西装，显得人笔直且飒爽。他微笑着，礼貌的结束了和面前客人的对话，小声和一帮的服务生嘱咐了几句便径直走向了窗边发愣的男孩。</p>
<p>“唉，这生意不好做啊”</p>
<p>皇甫烈自说自话的坐在了邱寸的对面，表情丰富的仿佛这家茶餐厅真要倒闭似的，他望着邱寸，仔细的打量着他。</p>
<p>邱寸收回了发散的目光，没抬头，也没接话，拿起菜单点了份和平常比起来过于朴素的早餐，不料，服务生已经端着茶和早点来了。</p>
<p>“嘿，他们的爪子都伸到校外来了？”</p>
<p>皇甫烈拿着茶细细的品着，一句话随着茶香飘出。</p>
<p>邱寸愣了愣，一时语塞。</p>
<p>“校内的事我没兴趣插手，但是我可不希望我的餐厅附近出什么事，那生意还怎么做啊。”</p>
<p>“不需要你来管。”</p>
<p>“你要知道退一步，不全是海阔天空，更多时候是万丈深渊。我很欣赏你的忍耐和坚持，噢，也有可能是软弱。”</p>
<p>皇甫烈嘴角咧开了一丝笑容，像是打趣，又像是嘲讽，放下茶杯，从西装的口袋里拿出一个手帕包裹的东西，小心翼翼的放在桌上。</p>
<p>“吃完就快去上课吧，乖孩子。”</p>
<p>邱寸死死的盯着他，而皇甫烈起身，微笑着，走向了刚刚来的客人。良久，邱寸狼吞虎咽的解决了早饭，将手帕放进兜里，飞奔着去了学校。</p>
<p>朗朗的读书声，准时响起，邱寸却无心课本，早上老板的话一字一句，像是夏日田间的荧光，微弱但引人追逐。他将口袋里的手帕放到抽屉里，接着邱寸的脑海里又浮现出早晨老板的神态，那是一种耐人寻味的表情，像是怀念，又像是悔恨，或者更复杂的无法理解的情感。邱寸慎重的将手帕展开，警惕的注意着讲台上的班主任。</p>
<p>灰色的手帕，像是丝绸面料的，温柔的包裹着里物，映入眼帘的，是一张小孩的照片，他面容清秀，嘴角微微咧开，如同卧在夜空的月弯，眼波深处，闪烁着浩瀚的星光。忽地一阵冰凉，打断了这份遐想。</p>
<p>“照片背后，还有东西？”</p>
<p>邱寸将照片翻过，一把精致的，灰色弹簧刀紧紧贴着照片，和正面的美好显得格格不入。</p>
<p>枬城的天气一如少女的心，万里无云的清晨，像是因为想念刚刚离去的月儿，下起了小雨，远处的街头模糊在了视野里，起雾了。</p>
<p>“咻———咻”一声轻浮的口哨声传入邱寸耳中。他慌张的将手帕连同里物藏进口袋中，低着头走出班级。</p>
<p>…</p>
<p>“哎哟？我们邱大少还会没有钱啊？是不是被什么小混混给抢了啊？！哈哈哈哈哈哈哈”</p>
<p>“早点把钱给我们，还能剩点自己用？这不是自找苦吃吗哈哈哈哈”</p>
<p>邱寸蜷缩着，铺面而来的恶臭让他晕眩，肮脏的地面污浊着他秀气的脸庞，疼痛，酸麻，随着拳脚在邱寸的身体每一寸撕扯着。</p>
<p>“自己坚持的到底又是什么？”</p>
<p>怀里，邱寸死死的攥着那把弹簧刀，连照片也捏的褶皱</p>
<p>忽地，“噌” 刀片弹开了。</p>
<p>一眼红色。</p>
<p>“都在干什么，滚回教室去！”</p>
<p>“我靠，谁他妈打的小报告…”</p>
<p>邱寸摇摇晃晃的站起来，原来那抹红色是那双的高跟鞋，原来…原来…</p>
<p>刚走出厕所，邱寸便身子一软，失去了意识。</p>
<h2 id="八"><strong>八</strong></h2>
<p># 末次修改于 19.12.19 by藏拙</p>
<p>车里都是些陌生的面孔，听说大部分也都是隔壁高中的学生，没人注意穿过过道的他。</p>
<p>她本是盯着车窗外卖饼的小摊上看得分明的热气，大巴上其他学生的喧闹甚至嘈杂并不能迸进她此刻的世界，她看着，看着油锅翻来倒去，看着卖饼大妈带的袖笼上的暗色花纹，好像妈妈曾经的穿过的一条裙子，已经多年未见但是从未离开她的脑海深处。直到车窗外的景物忽的开始移动，树、楼、人群，仿佛都赶着要在这一个清冷的早晨抽离开来，她才回过一点神来，发现身旁已经坐着穿着白色羽绒服的邱寸，抱着他好像可有可无的书包。</p>
<p>阿粥想着要打个招呼，一扭头恰好迎上少年抬头看她的眼睛，她忽然发现男孩今天戴了个棒球帽，也是白色的，帽沿下跑出一块淤青，她脑筋里冒出一个词，欲盖弥彰。她也知道这块淤青的来由，那天老师在班里说有同学摔倒受伤了喊同学帮忙扶去医务室的时候，她是看到了几个女生积极地往外跑来着。</p>
<p>“是你去跟你妈妈讲了那件事对吧，谢谢你”，没想到是男孩先打破了沉默。</p>
<p>“昂额”，阿粥抚了一下前额的头发，她想起那天晚上女人走出她房间时，自己喊住她的情景。</p>
<p>“那天……是颜老师自己发现的吧”，女孩给了他一个安慰的笑。阿粥不想邀这所谓的功，也不想当那唯一一个秘密的知情者，出于善良的本能，她也想保护一个年轻男孩的敏感自尊，更多的，是想把那些是非挡在门外。</p>
<p>女孩的回答倒是出乎邱寸意料之外的，这段对话里女孩的脸上没有波澜，他也立马知晓那话语的真假，只是他不知道女孩为什么这样说。他竟有一种碰壁的感觉，好像他想要对另外的人敞开心扉了，但是对面的人却礼貌地上了锁。</p>
<p>“哦”，他也微微笑了一下，“那，就谢谢之前的纸巾”。他递过一瓶牛奶，“喏，这个给你，我妈帮热的，让我拿了两瓶”。</p>
<p>阿粥接过瓶子，手指立刻感受到令人舒服的温度，她嘴里说着谢谢，脸上荡开一抹温柔。说实话，这两次的接触让她对旁边这个男孩的感觉翻新了不少，以前她偶尔注意过班里这个不怎么活跃但是存在感不低的男生，他给她的印象是沉闷甚至有点阴郁的，原来眼前的少年也会有明朗舒服的笑容，只是好像少得出奇，她还想起之前还有几个隔壁班的女同学来打听邱寸的名字。</p>
<p>一辆蓝皮客车，夹杂着关于电路的争论和排位打游戏的激烈，枬城边际的公路上疾驰而过。不过在属于两人的路上，是心照不宣的不语，车窗外一帧帧的画面能给人内心的安宁，或者又有一种奔向远方的刺激。</p>
<p>女生不禁想到自己贪睡的同桌。</p>
<p>男生不禁想起了自己房间的窗。</p>
<p>车子一直开到中午,才到达了詹大。枬城是受詹州管辖的地区，詹州大学是詹州市最好的大学。很多本地学生把詹大当作首选目标。这次市级物理竞赛的赛场也安排在了詹大。各地区自己负责给前来参加的复赛的同学安排车辆和住宿。复赛时间是明天上午，邱寸阿粥他们将在这边住一晚上，邱寸和另一个男生一个房间，阿粥则和另外一个女生，明天考完试就和来时一样，一起坐车回学校。</p>
<p>安顿完也吃过午饭，大家都回到房间，邱寸一屁股坐在他的那张床上，墙上的时间显示板赫然写着：星期四 13：26，房间的另外一个男生还没回来，他看了看窗外，想着要不要在詹大校园里面转一转，詹大的银杏是最出名的，每年因为银杏来詹大游玩的人也不少，不过现在不是旺季。虽然他不是第一次来这儿，但是距离上一次跟父母一起来那次也已经很有一段时间了。</p>
<p>一出房间门恰好碰到回房间的阿粥，便发出同游邀请，女生歪歪头，笑道：“正有此意”。</p>
<p>脚底下的银杏叶片窸窣的响，据说是前两天的雪加速了叶片的飘落，地上的银杏叶片已经有些许黯然失色，不过还是藏不住银杏本身足够优秀的颜，更显得杏黄色背景下两人的影子更加和谐。</p>
<p>“我还是第一次来詹大呢，其实我早就想来了”，阿粥环视了一下此刻的校园，美的像画，“你呢？”</p>
<p>“我应该来了不止一两次了，具体也记不太清”，男孩挠挠头，顺手整理了一下帽沿，依然是没有什么特别的表情。男孩觉得那些树很好看，他也形容不出来，不过，就是好看。</p>
<p>“哦对，我手机用的锁屏就是小时候在这里玩的时候照的，我妈抱着我来着”，男孩想起了什么，于是开始从口袋掏手机，一边回忆着，“当时还是跟别人一起来的，有个我妈认识的阿姨，我当时太小了，现在都不怎么记得了。”</p>
<p>邱寸满脑子回忆着小时候的自己，也一边打开手机给将屏幕那张银杏树下的合照展示被虐看，一边解说着，“不过那次是夏天了，叶子还多半是绿的”。</p>
<p>女孩正饶有兴味地听他讲，只是当目光一落到少年手上那张照片，她的神情凝住了，她都没来得及看邱寸给她指的他自己，脑筋里的神经也已经捕捉到了旁边那条暗色花纹的裙子，依然是被穿得如此妥帖，简直胜过她记忆里的模样。阿粥自己不会轻易去查看母亲的照片或者其他带着她气息的物件，她曾经就害怕有这么一刻，在她毫无心理设防的一个时候，突然给她感官上的冲击，她怕自己情绪的堤坝太过脆弱，她不想失态。</p>
<p>男生好像具有敏锐的察觉力，说话间才抬头看了女生一眼，“这是我你看得出来吗………诶你，怎么了？”</p>
<p>＃末次修改于 19.12.19 by pancy</p>
<p>仅仅是一瞬间的事情，阿粥就修复好面部表情，笑着回了句“没什么，阿姨好漂亮哎，完全看不出来是生了孩子的样子。” 邱寸看阿粥不是很愿意透露，而且看起来也的确没什么大事，就没再多问。</p>
<p>就在他按了Home键，准备关了手机继续欣赏风景的时候，女孩突然说了话，“冒昧的问一下，阿姨是在哪里工作阿？要是不方便说也没关系，我就是看她气质很好……”</p>
<p>男孩把手机塞进左边裤袋，“这有什么不方便说的，詹州博物馆，好像是什么艺术品修复所吧，其实我知道的也不是很细。”</p>
<p>邱寸直觉阿粥心里藏着什么，但是他知道他能做的就是假装一切都很正常。</p>
<p>是了，记忆中书架上的那些文化历史类书籍、记忆里带着她体验复制陶瓷的身影和温柔的声音。</p>
<p>总是因为什么文物的事情要去博物馆加班，但也总是记得半夜回来后悄悄进到她的房间，在自己家小姑娘热乎乎的小脸颊上留下一份夹杂着三分疲惫七分甜蜜的吻。</p>
<p>“呼——”女孩在寒风中长长的呼出一口气，脚底的银杏树叶有些还没完全从前些日子的潮湿里完全缓过神来，鞋底踩在上面发出的响动时高时低。</p>
<p>“感觉从事这些文化工作的人都好温柔呢，阿姨一定是个很好的母亲吧。”说到最后阿粥的声音越来越小，淡到像是被揉碎成粉末化开在了路过的风里。</p>
<p>“算是吧……”男孩扭头看了看女孩，女孩的目光有点空洞，仿佛落在一个很远的地方。  又聊了点和竞赛相关的事情，两个人便回去稍作复习了。</p>
<p>晚上吃完饭后负责老师跑了每个学生的寝室，大致说了些让大家放平心态不要给自己太多压力的话。阿粥耐心听着，眼睛瞟了一眼的床头柜上的电子钟</p>
<p>“20**,12,21 21:00”</p>
<p>心一不小心就飘到了其他地方。</p>
<hr>
<p>“20**，12，22  6:30冬至”</p>
<p>抬手关了闹铃，抬眼是白色的天花板，雨四慢吞吞从床上坐起，天色还没有完全亮起来，客厅有奶奶开煤气灶的声音。</p>
<p>估计是像往年冬至日一样，包了些饺子吧。</p>
<p>不知道是什么原因，总是在窗外电线杆上叽叽喳喳的麻雀今天早上都不叫了，出奇安静的早晨让雨四感觉到有点闷闷的，呼了口气，又重重的躺回被子里。</p>
<p>今天就等到奶奶喊再起床吧，雨四心里想。</p>
<hr>
<p>当人做俯卧撑时，“向上撑起的过程”和“向下落下的过程”中人体分别是“省力杠杆”还是“费力杠杆”？</p>
<p>阿粥一眼就看见了这个昨天刚复习过的物理题，写题的信心也变得多了起来，唰唰的写下了正确答案。</p>
<p>后座考试的是一个穿着白色羽绒衣的男孩，他慢吞吞写着最后一道物理题，时不时抬头盯几秒钟前桌女孩的背影。</p>
<p>冬至日虽然是一年当中白昼最短，黑夜最长的一天，但今天的太阳显然不错，光线直直照进教室。光路里有肉眼勉强可见的细碎灰尘，再往光的照射方向看去，一层金灿灿的亮光铺在女孩头发的边缘。</p>
<p>邱寸仿佛觉得，温暖并不是太阳传过来的，而是因为这个女孩，被寒风吹的冰冰凉的心逐渐苏醒，变得热乎而熨帖。</p>
<p>考完试后，大家就又像来时一样，坐上了回去的车。</p>
<p>大家还都是按着来时的位置，阿粥这次和邱寸打了招呼。</p>
<p>这时周围响起来一个女孩子的声音“大家考得怎么样啊，我们的竞赛题是一样的吗？大家都说说呗。”于是车上热火朝天的开始讨论各种吐槽和对答案活动。</p>
<p>偏后位置双人座上的女孩和男孩好像对大主题不太感兴趣，男孩小声问了女孩一句话，“考完了就不用想了，话说今天是冬至吧，准备回去吃饺子吗？”</p>
<p>邱寸自己是个毫不关心晚饭是什么的人，这句话从他自己嘴里说出来，也把他自己问住了。</p>
<p>“也许吧，看他们煮什么吧，我们家……不太重视这些。”阿粥又想起了小时候的那个温柔的女人教自己包饺子的情景，是香菇猪肉馅的元宝饺子吧。</p>
<p>他们后座是一个正在读书的小姑娘，正好念到首溱桑的一首小诗，</p>
<p>“你来时冬至，</p>
<p>​      但眉上风止，</p>
<p>​      开口是“我来得稍稍迟”。</p>
<p>​      大抵知心有庭树，</p>
<p>​      亭亭一如你风致。——溱桑”</p>
<h2 id="九"><strong>九</strong></h2>
<p># 末次修改于 20.1.4 by Aysamu</p>
<p>路边的商铺已装饰上红绿相间的物件，不少橱窗内都摆放了一棵挂满礼物盒与糖果棒的小树。红配绿，在这个国家的某些地方文化里有着些许讽刺意味的配色，在这样一个夜晚，显得那么融洽与温馨。</p>
<p>雨四在一盏街角的路灯下，捧着手机，不断向上回溯着聊天记录。</p>
<p>…</p>
<p>“回来了吗？考得怎么样？”</p>
<p>“复习的效果超好，比想象中容易不少啦。”</p>
<p>“那么恭喜了，对了，后天是圣诞节诶。”</p>
<p>“对，说起来，明天就是平安夜呢。”</p>
<p>“你…你后天有什么安排吗？”</p>
<p>“啊？”</p>
<p>”要不要出去过圣诞节，圣诞节在家里挺无聊的吧。”</p>
<p>“唔，你是说真的吗？”</p>
<p>“我看起来像在开玩笑吗？”</p>
<p>“那好，去哪里啊？”</p>
<p>“明天晚上再讨论！”</p>
<p>…</p>
<p>“在干嘛？”</p>
<p>“写作业呢，咋啦？”</p>
<p>“明天放学之后我在商店街的街口等你，大概晚上七点钟。”</p>
<p>“好的！”</p>
<p>“来的时候注意安全。”</p>
<p>“知道啦！”</p>
<p>…</p>
<p>六点半，是不是来得太早了点。</p>
<p>雨四看着手机屏幕，突然有些后悔自己饭都没来得及吃，一回家，放了书包就急着跑出来。</p>
<p>早知道能和她一起出来，前几个星期再多攒点钱就好了。</p>
<p>他把手探进裤袋，几张零散的纸币静静地躺在里面。幸好自己还有一点积蓄，来应对这种重要的时刻，这么想着，嘴角又不禁翘起。</p>
<p>抬头望去，远处，一个酒红色的身影，正穿过银白，缓缓走来。</p>
<p>雨四挥挥手，那身影迅速变得清晰。</p>
<p>“你到多久啦？”</p>
<p>“刚到。”</p>
<p>“嘿嘿，你还卖关子呢，你想好去哪里玩了吗？”</p>
<p>女孩子背过手，歪着头问着雨四，看得他一阵发慌。</p>
<p>“急什么，这不是刚到吗，先跟我走。”</p>
<p>他扭头走进街道，身后的阿粥笑意尚未散去，也紧跟着挪动了步子。</p>
<p>圣诞节的商场里异常拥挤，雨四穿过一对对情侣身旁的间隙，又时不时回头确定酒红色身影的方位，这仿佛一场游戏，雨四感觉自己正渐入佳境。</p>
<p>“挤什么挤啊！”有大叔吼着。</p>
<p>“不好意思，不好意思！”他回过神来，摸着脑袋，再次一头钻进人潮。</p>
<p>这座建筑从上方看来，是一个缕空的矩形。</p>
<p>一对男女正站在中间的露天广场旁，阿粥有点气，更有点上气不接下气。</p>
<p>雨四看向身旁的女孩子。</p>
<p>“你干嘛跑那么快啊，不能等等我吗。”她回敬了一个白眼。</p>
<p>“我们到了。”</p>
<p>雨四走向广场中间，阿粥被这突来的转变打消了气恼，赶紧跟了上去。</p>
<p>“哪里，哪里？你要带我去哪里？”阿粥四处张望了一下，周围似乎并无引人瞩目的招牌。</p>
<p>“圣诞树，这棵超大的圣诞树。”他提醒道。</p>
<p>女孩这才注意到，广场正中间有一棵巨大的，挂着彩灯与礼盒的圣诞树，只是在周围的商铺灯光下，略显暗淡。</p>
<p>“哈？”她一时愣住。</p>
<p>雨四正想接着说些什么，一小片白色竟经过他的视线，他迎着光，看见了更多的白。</p>
<p>有那么调皮的几朵，落在了女孩子的头上，搭在她的睫毛上，阿粥眼皮忽的一冷，她下意识眨了眨眼，回过神来却看见雨四正盯着自己。她有些紧张，“下雪了呢。”</p>
<p>少年点了点头，“圣诞快乐。”</p>
<p>“圣诞快乐。”</p>
<hr>
<p>雪刚飘起的时候，圆脸的小姑娘正蹲在祈福寺前的石墩子上，淡蓝色的头发差一指宽才够得着肩膀，随意散乱在脑后。她捻着一条毛毛虫，又放下，捻起，又放下。</p>
<p>她叹了口气，抿起嘴，突然笑了起来。</p>
<p>起身，向山下走去。</p>
<hr>
<p>“胆子还挺大嘛，还敢告老师？”</p>
<p>“看来平时教训他教训得还不够啊。”</p>
<p>“是不是我们对你太和蔼了？”</p>
<p>邱寸倚着厕所的墙壁，手背在身后，没有任何表情。</p>
<p>“怎么了？吓傻了？”</p>
<p>离他最近的男子推搡着，又用手拍了拍邱寸的脸。</p>
<p>“不会说话吗？现在叫声爷爷，拿点这个孝敬孝敬哥几个，你还有救。”食指与中指挨着，被大拇指一并在邱寸眼前反复揉搓着。</p>
<p>靠着墙的少年看向他的眼睛。</p>
<p>“看什么呢？啊？你看什么？”</p>
<p>一口浓痰吐在了邱寸的脸上。</p>
<p>他从背后抽出一只手来，摸着脸，碰到粘稠的液体，没停下，抓起。</p>
<p>更远些的几个男生刚点起烟，看到这一幕，有些作呕。</p>
<p>“这小子脑子吓坏了？”</p>
<p>痰液的主人也感到一阵反胃，“怎么了？喜欢爷爷的痰？”</p>
<p>一只手搭在他肩上，他瞥了一眼，却发现来自对面，愤怒还没来得及成型，颈侧一凉。</p>
<p>剧痛让他难以发声，但耳边的混乱能清晰呈现在脑海。</p>
<p>“我艹，杀人了！”</p>
<p>“他带了刀！”</p>
<p>“愣着干什么，快去打120啊！”</p>
<p>他看见那个男生依旧面无表情，看着自己的左手，又看了看他的肩膀，右手正反握着弹簧刀，红色的弹簧刀。</p>
<p>“哦，他把痰擦在我衣服上了啊，真恶心。”</p>
<hr>
<p>阿粥早上刚出门时，有些脸红，又有些不安。</p>
<p>昨天晚上回来之前，一路上脑中都在反复放映和那个人并肩而立的场景，他的声音，他的眼神，他的心思。</p>
<p>昨天晚上回来之后，那个女人却不在家里了，桌面上只留了一张字条。</p>
<p>“学校里出了点事，我现在去学校一趟。”</p>
<p>学校里出了什么事情呢，这么紧急。</p>
<p>刚进校门，她看见警车停在校门口，有老师在一旁通知着：昨晚学校出了紧急事件，没来得及通知大家，今天全校停课。</p>
<p>“唉，停课就该早点说嘛，我们来都来了，又得回去。”有些不满的声音。</p>
<p>“让你休息一天还不好，得了便宜还卖乖。”有些兴奋的声音。</p>
<p>“你们听说了吗，昨天晚上好像有人在学校里斗殴，闹出人命了！”有些恐慌的声音。</p>
<p>斗殴？</p>
<p>阿粥抓住了这个字眼，没来由的想起某个被常被欺凌的男孩子。</p>
<p>他应该没事吧？上次也跟班主任说了，班主任可在班上好好骂了那几个欺负人的男生一通。</p>
<p>她不由得有些担忧。</p>
<p>“喂，发什么呆呢。”熟悉的声音打断了她，她惊喜的回过头，却迎头撞上一袋豆浆。</p>
<p>“吃饭了吗？喝不喝豆浆？”雨四移开豆浆，摸了摸她的额头，“没撞傻吧？”</p>
<p>阿粥鼓起腮帮，“你才撞傻了！”</p>
<p>她一把夺过眼前人手中的豆浆。</p>
<p>“我喝。”</p>
<h2 id="十"><strong>十</strong></h2>
<p>#末次修改于 20.1.10 by 此犬</p>
<p>两人捧着热气腾腾的豆浆并肩往校门外走去，朦胧的雾气缓缓从眼前飘散，临时停课的通知帮这群处在学业压力下的孩子们冲散了些许寒冷。</p>
<p>而对雨四来说，似乎有些失落，他发现人们爱上一座城，恋上一处景，更多的时候是缘于一个人。机械反复的每一天，在雨四看来，这就是他现在所向往的生活状态。</p>
<p>同样是停课，相较于雨四和周围欢快的人群，阿粥就显得有些格格不入了。校门口面如寒霜的老师们，校门外神色无奈的便衣警察们，联想到清晨女人留下的字据，心中的不安愈加的躁动。不知为何，一个少年的模样在脑海中挥之不去。</p>
<p>“今天学校停课诶！下午有什么安排嘛？要不要出去转转？”</p>
<p>雨四望向周遭依旧喧闹的早市摊子，斟酌着刚挤出的只言片语是否有些唐突。</p>
<p>“…”短暂的无言。</p>
<p>雨四转过脑袋，看出了身旁少女的纠结和焦急，则是暗暗后悔，却又不知说些什么好。腊月的寒风吹得少年的脸通红，也吹的漫天的雪花零落。</p>
<p>“啊！不好意思！刚刚走神了，你…你说什么来着？”</p>
<p>感觉着雨四焦急的目光，阿粥慌乱的发现了自己的失态。可转身刚迎上少年的双眼，更是局促的低下头来。</p>
<p>“噢！没…没什么！该过马路啦！”</p>
<p>迎着朝阳下的雪花，两人并着肩，低着头向前走去，像是教室外犯错的小孩儿，周遭的吵杂让两人更觉着局促了。</p>
<p>忽地，一阵人群的嘈杂，随着寒风向两人袭来。</p>
<p>“什么？居然是他？！”</p>
<p>“我靠，这哥们猛啊！”</p>
<p>“他也是被逼的吧，毕竟…”</p>
<p>刚走到马路这头的两人随着流言的方向，朝校门内望去——缄默的老师，哭泣的妈妈，无奈的警察，淡漠的孩子。</p>
<p>甚至无法让人们定义他是个孩子，走到警察面前的他抬起了头，稚嫩的脸上镶着两颗深邃到令人发怵的眼眸，扫视着人群，或者说是质问，亦或是一种释然，但终究是冷冽的。</p>
<p>“那个是…邱寸？诶…人呢？”雨四向阿粥问道，却不知身旁的少女已经奔向了马路那头。</p>
<p>“真的是他？”阿粥跑向马路对面，她不敢确定，或者说不敢相信是那个少年。她觉着须眼见，心才实。</p>
<p>———“他妈的，这个狗日的还敢叫老师来，真晦气！”</p>
<p>———“还以为多硬气，呸！”</p>
<p>她必须亲眼求证。</p>
<p>神色淡漠的少年，转身看向她的母亲，眼光中难得多了一缕温暖，他轻轻地拍打着母亲的背，在她耳边轻声说了几句。</p>
<p>“走吧，时间久了…”</p>
<p>“嗯。”</p>
<p>邱寸转过身，离开了母亲的怀抱，尽管那是许久未闻的温暖，他知道是他们，更是自己毁了这一切。</p>
<p>“邱寸！”</p>
<p>半身已经踏入车里的邱寸愣住了，他抬头看着人群中的少女，一时间心中五味杂陈。他勉强挤出了一丝微笑，便迅速的钻入了车内。</p>
<p>汽车缓缓驶远，雪依旧飘着。</p>
<p>…</p>
<p>马路这头的少年望着那头，</p>
<p>马路那头的少女看着马路尽头，</p>
<p>中间隔着的斑马线，</p>
<p>相伴却未曾相拥。</p>
<p>#末次修改于 20.1.20 by 藏拙</p>
<p>咖啡店靠窗的座椅上瘫了两只猫，玻璃门透过的光照的猫身上毛色发亮，倒显得“詹大咖啡店”的招牌暗淡了些。杯里的汤匙缓缓搅动，湛蓝色的围巾后面妇人的脸是好看的，除了那藏不住的憔悴。她的目光时不时抬向门外的方向，凝重而温柔。</p>
<p>目光终于等来了一位少女，淡灰色棒球服外套里面是蓝色的背带裤，头上还戴了一顶尖顶针织帽，和这里常年的景象一样，都是极有青春活力的模样。此时踏进来的女孩还不知有人在等她，直到阿粥走近，服务生同伴才对着她指了指妇人所坐桌子的位置。</p>
<p>“听说你刚进大学不久就在这里打工兼职了，我就来这等你了。”不明所以的姑娘刚坐下，对面就这样说到。</p>
<p>眼前的女人看着有一丝面熟，在脑海中盘寻下去，阿粥想起了几年前银杏树下看过的那张照片。只是岁月荏苒，眼前的女人已经不想照片里看起来那样光彩照人了。</p>
<p>“您是…”，姑娘疑惑的眼睛隐隐发光，“您是邱寸的妈妈？！”</p>
<p>“哦，对的，不好意思”，邱寸妈妈带有歉意地微笑着，一边把桌上另一杯拿铁往女孩那边推了推，一边说，“想起来你还不认识我，只是我之前听寸儿讲过，其实，我与你母亲是旧识……”</p>
<p>“那，阿姨”，阿粥把心中感叹和惊讶的情绪收了收，打断了好像还没说完的话头，“邱寸他现在还好吗？我跟他原来是同学，但自从那次出了事，我记得邱寸还是参加了中考的，继后大家也各自去了不同的高中，也没有联系和消息了……”，阿粥心中想几年前那段时光，好像很多记忆突然翻涌起来，想起老同学心里也很不是滋味，但抬头看见女人的面容，她又不忍心把心里的难受表现出来，外人的可怜在一个母亲的眼里很难说不是一种更深的打击。</p>
<p>邱妈妈垂下眼帘，“是的，法院知道是故意杀人，被判了三年”。</p>
<p>“可是，未成年人犯罪不应该……”</p>
<p>“是，寸儿当时已经满了16岁了，他比你们要大一点，因为当初我和他爸爸四处奔波的缘故，迟些上学”。女人打断阿粥小心翼翼的声音，“法院也酌情，还是让孩子参加了中考”。她的手依然在轻轻搅动着汤匙，但是自咖啡端到她面前来，一口未动。</p>
<p>“其实我这次来找你……”，女人说得很慢，阿粥却是听得更注意了，对面的阿姨为什么在今天来自己的学校找她这也是她最疑惑的地方，只是聊起往事，迟迟未开口问她。</p>
<p>“一是因为，寸儿他，”女人又顿了一下，“明天就要出来了”。</p>
<p>阿粥的音量提高了些，“明天？”，邱寸妈妈说到三年的时候，她就在心里默估了一下，好像当年出事距离现在也差不多就是三年时间了。</p>
<p>“他爸又刚好在这两天有急事出差，枬城这边也就我能去接他了，我希望你能跟我一起去”。</p>
<p>“我？”，阿粥瞪大了眼睛。</p>
<p>她终于停下手指，轻轻叹了口气，“寸儿这孩子自那段时间起，性格变孤僻了许多，也是怪我们”，女人面露神伤，抬头认真看着眼前的女孩，“而你是那段时间后，他在我们面前提起过的唯一一个同学，要知道那段时间他基本不曾谈起过学校的生活”。</p>
<p>说话间，阿粥的记忆由模糊到清晰，那个少年的样子，现在想来有些稚嫩，能记起的也就是一起参加竞赛时共游詹大的时候了，也就是她现在就读的地方，可知这也曾是他们的梦。血腥的场面她是亲眼见过了的，阿姨的话更加重了她忧伤的心绪，好似外面银杏叶，明黄的颜色随着风日渐加浓。</p>
<p>“其实也是因为，阿粥，阿姨想请你帮我们家一个忙”。</p>
<p>阿粥的眉头忽的紧了一下。</p>
<p>“事后我在学校找过人了解情况，当然还有颜老师，我那是知道，她是你的……嗯算是后妈是吗？她说过是你告诉她寸儿被欺负的事的，再加上一起出去参加过比赛，班里也就是你能跟寸儿说的上些话了。”</p>
<p>说到这，女人突然把面前的咖啡端起来喝了一小口，感觉情绪激动了些。</p>
<p>“本来，说到底寸儿也是受害者，但是身上带了刀，犯罪事实也是摆在那里，被杀害的那个，家里有些黑势力，结果，判定了是蓄意杀人”。</p>
<p>少女是心细的，感觉到对面的女人的嘴角隐隐抽搐着，她伸了伸手，想做点什么来安慰她，但是邱寸妈妈摇摇头，阻拦了。</p>
<p>“阿粥，阿姨知道你是当时唯一看到那些人欺负寸儿的人是吗？”</p>
<p>“您是想让我帮忙让那些坏人受到惩戒？”，姑娘认真也带着诚挚地问道。</p>
<p>女人看着面前的女孩，面对年轻人的话语，她忽然有点不知道怎么回应，她怔了一下，然后缓缓地点点头，“这几年寸儿的同学也都分散各地求学，我知道你去了冬穆中学，高中是学习的重要的阶段，又不在枬城，所以那两年我没有去找过你”。</p>
<p>阿姨又说起了邱寸的往事，也说了这几年去探望儿子的状况，此时的阿粥思绪万千，她能明白一个母亲的心境，也一直念着同学旧情，而且这人是邱寸，不是一个跟自己毫无交集恩怨无关的路人，当年对这人的感觉现在也好像还能回味起，当年事出之后阿粥其实怎么样也不能把这个男孩跟牢狱之灾联系在一起，她现在也很想见一见这位当年的同学，看看他现在怎样了。但是几年的时间并不是无足轻重的，这个时间长度足够改变很多，添加很多或者抹去很多，这几年下来，自己的心境不比当时，也不是当年的小女孩，这几年发生的事自己的变化眼前的这位女人一定也不了解。</p>
<p>“阿姨，我答应您，明天学校放假，我陪您去接邱寸”，阿粥给了对面阿姨笃定的目光和眼神，“不过我其实没有真正看到过那些人是怎样对待邱寸的”，女孩转了话锋，“但是，还有一个人，当年他目睹过那些人是如何在学校撒野的”。</p>
<p>女孩想起了那年一同考去了冬穆的雨四。</p>
<h2 id="十一"><strong>十一</strong></h2>
<p>#末次修改于  20.2.10 by摒野</p>
<p>阳光穿过高墙，直直照进一扇小铁窗，照在一个男孩身上。男孩坐在板床边，垂着头一直盯着涤纶的狱服默不作声。</p>
<p>不一会儿，一阵脚步声由远及近传到耳朵里，伴随着的还有钥匙互相碰撞从而产生的独特金属的声音。</p>
<p>&quot;吱——”是门被打开。</p>
<p>“嘿，坏小孩儿，你今天可以出去了。这是你家里人给你送来的衣服，换了走吧。”</p>
<p>换上便服，把牛仔裤套在腿上的感觉很奇怪。邱寸在离开那一间一间狭窄的小房子的路途中想着，人为什么要发明牛仔裤呢？棉质的衣服不合适吗。</p>
<p>约定好在少管所见面，少管所距离监狱还有一段距离。邱寸提出自己打车回去，没有被拒绝。拿着和狱警换到的纸币，他立刻注意到钱不一样了，水印和大小好像都有细微的不同。</p>
<p>“哈哈，是真的。”穿着狱警衣服的男人看出了他的迟疑。</p>
<p>“嗯，我知道。”邱寸抬眼又看了一转这个藏住了他三年过往、并将永远都留在他的人生简历上的地方，呼了一口气，轻轻把头转过去。</p>
<p>监狱是个无时不刻不在吵闹的地方。囚犯会相互扯着嗓子交谈或是单纯的吼叫发泄、狱警通过对讲机传出来的大声喝止警告声、警棍敲打在门和铁栏杆上的令人不悦的刺耳金属声、钥匙转动送进新犯人或是送走出狱的幸运家伙的声音。</p>
<p>然而这时，邱寸感到异乎寻常的安静。只有风声和远处可能是来接自己的汽车传来的引擎声在耳畔。</p>
<p>路途不算近，邱寸全程没有理睬司机的搭话和并无恶意的试探。他没有办法让自己的目光从窗户上移开，他想把变过的和没有变化的都尽收眼底。</p>
<p>这可能是个梦境，过了今天明天还会回去。</p>
<p>在快到目的地时，邱寸突然不想让师傅停车，他怕自己还不太擅长应付太多情绪，可能有自己的，也有别人的。</p>
<p>想到在出狱前几天妈妈打来的电话，说要给他办接风宴，说是不管怎样洗洗晦气。被邱寸拒绝了。</p>
<p>付钱时看到邱寸拿的是纸币，司机师傅还楞了一下，不过知道了男孩像是不爱说话，也没多说多少。</p>
<p>几乎是一瞬间，邱寸就从看见了所里有一张熟悉女孩的脸。他皱了皱眉，杵在原地。</p>
<p>又有一个熟悉的身影出现在邱寸的眼前，是她？</p>
<p>邱寸突然不想再走进去了，他果断地扭头招呼住还没有离开的司机师傅。</p>
<p>“抱歉，走错地方了，不该到这来的。到詹州港，呃，麻烦您，我家在那边。”</p>
<p>对上男孩清澈的目光，不像是在说谎的样子，于是司机师傅带着疑惑又踩下了油门。</p>
<p>詹州临江，算得上一座占尽地理优势的宝地。由于近些年工业逐渐发展，原本的天然滩涂被建成了一处港口，常年集装箱堆积。江岸线很长，有很大一段距离是未被水泥凝固的江滩。</p>
<p>今天风有点大，邱寸想。很奇妙，风这种东西不是一成不变的，它好像害怕密集，好像对拥挤有一种天生的恐惧感。有建筑挡住它呼吸的时候，它就变得微弱胆怯，到了无人的江面，它就开始放肆，从挣扎中被解放，于是变得越来越疯狂。</p>
<p>就像人一样。</p>
<p>江面上有鸟类的鸣叫声，像是哪种猛禽。有点不大对劲，一般在一座算得上繁荣发达的城市边很少会见到属于猛禽类的鸟。</p>
<p>天色渐暗，晚上吃完饭出来消食的当地居民也多了起来。周围渐渐变得嘈杂，突然有一道声响窜进邱寸的耳朵里。他太清楚这是什么声音了，在西南方向的观赏草堆后面…</p>
<p>思考了两三秒，他迈了步。听到了他很久没有再听到过的声音。</p>
<p>“喂，臭小子，别***给脸不要脸。爷爷们已经在很客气的和你讲话了。”</p>
<p>“拿不出来很好办，要不就是你挨一顿，要不就是你妹妹…刚刚放学我们可都看见了，扎蝴蝶结的吧，兄弟们也不挑。“</p>
<p>然后就是一段沉默，铁棍和混凝土摩擦发出刺耳的声音，又是这种令人头痛的演奏。</p>
<p>“咳…别…放过…咳”听起来像肿块和血水已经在嘴巴里见了面。</p>
<p>邱寸有点失神，拳头一度攥紧又松开，整个人明显在微微颤抖。</p>
<p>“谁？”好像有人发现了什么细微的动静，铁棍和地面摩擦的声音慢慢离邱寸越来愈近。</p>
<p>“劝你不要凑热闹。”叶子投下的阴影处传来一声警告。</p>
<p>一切好像和三年前重合了，不管是发狠的劝告声还是金属与地面间的刺耳摩擦，又或是暗处倒在地上男孩的无助和绝望。一切好像都没有变过。</p>
<p>不行，我该走了。</p>
<p>邱寸轻轻的向后挪了一步，接着是第二步、第三步、第四步…</p>
<p>他猛地转头，疯子一样开始狂奔。像是有一条猛兽在追着他，嘶吼着要咬碎他的胳膊和腿，要把森森的尖牙咬进他的皮肤和血肉，不一口吞下他的心脏不善罢甘休。</p>
<p>终于跑到了人多的路段，但耳边的嘈杂开始消失，身侧的灯光逐渐暗淡。</p>
<p>只有风声，那个几乎被挤压的没有空间呼吸的风开始散发气息，邱寸被完全包裹住。他不知道自己到了哪里，自己明明不在乎了。真的吗？</p>
<p>是不在乎那些事了呢？还是不在乎自己面对那些将会做出的回应呢？</p>
<p>不知道过了多久，邱寸眼前变得清晰。</p>
<p>“小兄弟，到了，该下车了。”</p>
<p>邱寸拿出纸币交给司机师傅。</p>
<p>看到邱寸拿的是纸币，师傅愣了一下。但看男孩好像不怎么爱说话的样子，也就没说多少。</p>
<h2 id="十二"><strong>十二</strong></h2>
<p># 末次修改于20.2.16 by Aysamu</p>
<p>树与树之间保留着微妙的间隙，当风扫过，粼粼而动，心潮也随之荡漾。</p>
<p>江畔公园，一青年正背靠护栏，头微上扬，回想起当年事，白云苍狗，人生万事无不有。</p>
<hr>
<p>后脚方才跨出车门，便看到那张熟悉的面庞，和那张不那么熟悉的面庞。</p>
<p>他点头，又点头，算是打过招呼。</p>
<p>“走吧。”</p>
<p>年长的女人一时语塞，准备好的说辞接连垮掉，她歉意地对身边的女孩笑了笑，又转向儿子。</p>
<p>“好，回家吧。”</p>
<p>阿粥歪歪头，抿着嘴，觉得现在做什么都是多余。</p>
<p>……</p>
<p>“见过了吗？”</p>
<p>“嗯，见过了。”</p>
<p>“怎么这么快就来了？”</p>
<p>“阿姨留我吃饭，我看他不太想搭理我，就拒绝了。”</p>
<p>“他还是那样啊。”</p>
<p>女孩趴在扶栏上，江水静静淌过这座城市，阳光被水面折成许多段，风起，又被折成另外许多段。</p>
<p>“上次跟你说的，作证的事，你觉得怎么样？”</p>
<p>仰起的脸向一旁稍倾斜，他看见女孩的刘海被吹的东倒西歪，抬起手，将它们捋顺，顾不得女孩子斜过来的白眼。</p>
<p>她打掉男生的手，“说正事呢！”</p>
<p>雨四笑了笑，又靠了回去，望着只有一朵云的天空。</p>
<p>“不去。”</p>
<p>“啊？”</p>
<p>“嗯。”</p>
<p>阿粥瞪大眼，弹起身子，侧跳到雨四跟前。</p>
<p>“为什么？”</p>
<p>“没意义。”</p>
<p>“怎么没意义了？你知道他是因为被欺负的。”</p>
<p>“跟我们没关系，这件事已经过去了。”</p>
<p>“这件事过去不了，他得背负这个名声一辈子啊！”</p>
<p>雨四直直地看向女孩子，“难道他没有杀人吗？”</p>
<p>“他是被逼的。”</p>
<p>“行了，被逼急的人做了错事，那是他们的事，我相信邱寸自己也不愿意再在这事上纠缠不清了，他需要开启新的人生。”他顿了顿，“你问我觉得怎么样，我的看法是，你也没必要继续掺和在这里面，没有邱寸的这三年，我们不都过的挺好吗？现在咱们也到了理想的大学，干嘛突然为过去的事伤脑筋？”</p>
<p>阿粥看着被握起的手，怔怔无言。</p>
<hr>
<p>自那次见面以后，阿粥很久没有主动联系过我，给她打电话也没有接。</p>
<p>我们俩不在一所学校，当她刻意避开我时，我的确无可奈何。</p>
<p>很难想象，将近三年的感情，碎裂时却如此悄无声息。</p>
<p>那晚，我一个人喝了很多，我很清楚，她的态度意味着什么，我想不明白自己在哪里做错了，如果有解释也好，但她竟是连搪塞的功夫都懒得做。</p>
<p>恼怒，恼怒，恼怒。</p>
<p>答案其实已经在我的嗓子眼了。</p>
<p>什么？你问我后悔吗？</p>
<p>为什么要后悔？关于那场对话，即便今日，我也一个字都不愿修改。</p>
<p>江水往则往矣，意欲从心故执我见。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>合作创作</category>
        <category>校园章</category>
      </categories>
      <tags>
        <tag>轮流写作</tag>
        <tag>校园</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果眼</title>
    <url>/posts/366867c4.html</url>
    <content><![CDATA[<h2 id="苹果眼">苹果眼</h2>
<hr>
<h2 id="那些被你苦苦执着的东西，往往会对你进行重复的折磨，难以停息。"><em>那些被你苦苦执着的东西，往往会对你进行重复的折磨，难以停息。</em></h2>
<span id="more"></span>
<p>李的苹果从桌边滚落，他伸手去接，却抓了个空。<br>
苹果啪在了地板上，又被捡起，摆回到桌子一角。</p>
<p>他的手指一屈伸，李的苹果再次落下，他伸手，没够着，“啪。”</p>
<p>青嫩的苹果皮上多了两块淤青，想必也会越来越多。</p>
<p>他又一次伸出手，指尖就快挨到苹果身子，轻轻一碰，那颗苹果绕着手指划了个六十度，与地面来了个亲密接触。</p>
<p>苹果做好了降落准备，或许还没做好？</p>
<p>两条手臂探出，和娃娃机里的夹子一样，夹向了苹果。他猛地用力，右手指甲扎进了左手指头根部，可怜的苹果已然看不出伤势程度。</p>
<p>老兵苹果尽管伤痕累累，依旧被毅然决然地推出。</p>
<p>他早把椅子挪开，双脚后蹬，向前扑出。虽然怀中落空，额头倒是有了着落。鼻翼有一股热流淌过，他手撑着地坐起，那将死的苹果正躺在一旁。</p>
<p>李是想吃那颗苹果的，是青嫩无损的那颗。</p>
<p>但从第一道棕黑烙印在苹果上起，他就自觉难以回头了。</p>
<p>“这既是我的选择，也是它的选择。”李觉得。</p>
<p>他认为自己还是太莽撞了，李开始试着假设自己是这颗苹果，该用什么样的方法才能捉住自己。</p>
<p>他试着将心态放空，盯着身前的空白，弹指，眼前的景象开始上移。蓄势已久的手刺出，他看见手掌向自己快速靠近，中指略向自己脑后，食指、无名指，小拇指紧紧跟上。</p>
<p>“很好，就差最后一步了。”他脑中闪过。</p>
<p>大拇指挨近苹果，用力，抓住。</p>
<p>指腹传来柔软触感。</p>
<p>“很好，成功了！”</p>
<p>顺势指尖也抠进苹果皮里。</p>
<p>他眼前仅剩漆黑，温热、异物感与刺痛逐渐向大脑反馈。</p>
<p>李下意识去捂住眼睛，却发现手并未作出想象中的回缩，掌心传来冰凉的触感，他松开一只手，迎来的面孔鼻翼两侧一片光滑，直到外耳，什么也没有。</p>
<p>“这人长得真是渗人。”李心想。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>短篇故事</category>
      </categories>
      <tags>
        <tag>写作</tag>
        <tag>短篇故事</tag>
        <tag>文学</tag>
        <tag>恐怖</tag>
      </tags>
  </entry>
  <entry>
    <title>解决py2neo库插入neo4j时发生的重复节点写入问题</title>
    <url>/posts/31f0c08e.html</url>
    <content><![CDATA[<h1>解决py2neo库插入neo4j时发生的重复节点写入问题</h1>
<p>在学习如何写入neo4j时，我找到了一个py2neo库，能简化对neo4j数据库的增删改查操作，减少了cypher语言的学习工作。</p>
<h2 id="工作流推送">工作流推送</h2>
<p>官方文档中推荐使用如下方式来进行工作流推送，后续代码中我也会省略该部分的描述。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph = Graph(url, auth=(url, pwd))</span><br><span class="line"># transaction写入过多数据时可能会响应缓慢，建议每一批次加载完成后便进行提交，再使用新的工作流写入。</span><br><span class="line">transaction = graph.begin()</span><br><span class="line">graph.commit(transaction)</span><br></pre></td></tr></table></figure>
<h2 id="py2neo节点插入时重复节点处理">py2neo节点插入时重复节点处理</h2>
<p>我将自己的数据写入到neo4j时，会出现重复写入节点的问题，经排查发现，我的节点是先于关系写入的，在关系写入时会发生此情况，因此需要改进该部分的代码写法。</p>
<h3 id="create-函数直接创建关系">create()函数直接创建关系</h3>
<p>在使用<code>transaction.create(rela)</code>为<code>Graph</code>对象创建关系时，若<code>n1</code>与<code>n2</code>是已经存在的节点（这里出于节点与关系的异步加载，无法直接调用第一次创建的节点对象），并使用流程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">n1 = Node(label, name=&quot;name1&quot;)</span><br><span class="line">n2 = Node(label, name=&quot;name2&quot;)</span><br><span class="line">rela = Relationship(n1, &quot;relation&quot;, n2)</span><br><span class="line">transaction.create(rela)</span><br><span class="line">graph.commit(transaction)</span><br></pre></td></tr></table></figure>
<p>这时会出现重复节点的问题。</p>
<h3 id="merge-函数从新旧节点里创建关系">merge()函数从新旧节点里创建关系</h3>
<p>经查找发现，若使用<code>transaction.merge(rela(n1, n2), label, name)</code>可能可以避免重复节点的创建，该方法的使用如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">n1 = Node(label, name=&quot;name1&quot;)</span><br><span class="line">n2 = Node(label, name=&quot;name2&quot;)</span><br><span class="line">rela = Relationship.type(&quot;relation&quot;)</span><br><span class="line">transaction.merge(rela(n1, n2), label, name)</span><br><span class="line">graph.commit(transaction)</span><br></pre></td></tr></table></figure>
<p>但由于我的节点多属于不同类型，而该函数中的<code>primary_label</code>与<code>primary_key</code>均为必填项，我暂未弄清楚应如何填写<code>label</code>项才能达成理想效果，并且该方法可能会面对新旧节点筛选的问题（尽管本项目中暂时没有这种问题），故放弃该方法。</p>
<h3 id="NodeMatcher类进行节点查找">NodeMatcher类进行节点查找</h3>
<p>查阅文档发现可以使用内置的<code>NodeMatcher</code>类来通过<code>label</code>与<code>name</code>来查找节点，本项目中节点属性项暂时较少，可以保证精确查找到目标节点。使用流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nodes = NodeMatcher(graph)</span><br><span class="line"># 若匹配成功会返回该节点对象，失败则为None。</span><br><span class="line">match_result = nodes.match(label, name=name).first()</span><br></pre></td></tr></table></figure>
<p>该方法既可以用于避免预载入节点时重复写入，也可以用于避免关系写入时的重复节点创建。<br>
在节点写入时，我进行如下的应用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for row in entities.itertuples():</span><br><span class="line">	# 若在现有节点中未匹配到当前节点，才会将其写入图对象中。</span><br><span class="line">	if nodes.match(row[1], name=row[2]).first() is None:</span><br><span class="line">		N = Node(row[1], name=row[2])</span><br><span class="line">		transaction.create(N)</span><br></pre></td></tr></table></figure>
<p>由于我的每一批次中，所有节点都先于关系进行写入，所以不用关系写入时考虑出现节点匹配为空的情况。在我的关系写入中，我将其进行如下应用：</p>
<pre><code>for row in relations.itertuples():
	i_type = entities[entities[&quot;name&quot;] == row[1]][&quot;type&quot;].iloc[0]
	t_type = entities[entities[&quot;name&quot;] == row[2]][&quot;type&quot;].iloc[0]
	# 使用Nodematcher匹配已存在的节点，再在两者中间创建关系，最后写入图对象中。
	n_i = nodes.match(i_type, name=row[1]).first()
	n_t = nodes.match(t_type, name=row[2]).first()
	rela = Relationship(n_i, row[3], n_t)
	transaction.create(rela)
</code></pre>
]]></content>
      <categories>
        <category>学习</category>
        <category>neo4j</category>
        <category>py2neo</category>
      </categories>
      <tags>
        <tag>py2neo</tag>
        <tag>neo4j</tag>
        <tag>知识图谱</tag>
      </tags>
  </entry>
  <entry>
    <title>路灯</title>
    <url>/posts/3466344d.html</url>
    <content><![CDATA[<h2 id="路灯">路灯</h2>
<p>指尖划着深棕的楼梯扶手走下，教学楼大厅的挂灯衔接着正在施工的泥泞道路，让我有一种身处列车站台的感觉。<br>
站台下是轨道，站台上是一方天地，轨道的延伸处，又是一方天地。<br>
才过小雪，街边的风缩紧路人的衣领。我从拼接成马路牙子的砖块中挑拣出规整的部分来走，偶有学生蹬着单车掠过我身旁。</p>
<span id="more"></span>
<p>结束自习回到寝室的这段路，走过时，总能感到切实的放松，这最近也激起了我对“走路究竟能不能解压”的好奇。<br>
突然想起有个人说晚上要值班，破坏了他这周回家的计划。吸进一口冬意，我拿出手机拨通了他的号码。<br>
“喂？”<br>
“你那边弄完没有？”<br>
“还没有…你要干嘛？”<br>
“不是八点半就该结束了吗？那你今天应该真的回不去了啊。”<br>
“我迟到了…所以拖晚了，干嘛？”<br>
“没什么，就问问。”<br>
触碰了红色的电话图标，我将手机揣回卫衣口袋，向前没走两步，一团橙黄的光拦住了我。<br>
是一盏路灯，它有着格外粗的灯杆，和四颗灯泡。<br>
过于明亮了，以至于我会愣在路灯旁，抬头直勾勾的盯着那四顶大灯。压抑、刺眼、呆滞，甚至是肃穆、庄严，纷纷闪烁在我的前额，我一时不知如何去换气。<br>
这路灯，真是既突兀又合适。<br>
我又往前走了两步，抬头，那一系列微妙的情绪依旧干扰着认知。我径直走到了它背后，不再那么刺目的光，让我竟有些失落。<br>
旁边走过一对爷孙，小孩子骑在老人的肩膀上，喜意盎然，我夹在光与光之间，略显疲态。</p>
]]></content>
      <categories>
        <category>写作</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>散文</tag>
      </tags>
  </entry>
  <entry>
    <title>通过pyhdfs访问hdfs所遇到的相关问题</title>
    <url>/posts/1872f332.html</url>
    <content><![CDATA[<h2 id="通过pyhdfs访问hdfs所遇到的相关问题">通过pyhdfs访问hdfs所遇到的相关问题</h2>
<p>最近学习使用java API访问hdfs时，十分渴望用python访问，就在pycharm里import了pyhdfs，尝试访问hdfs。</p>
<span id="more"></span>
<h4 id="一、本地虚拟机体验">一、本地虚拟机体验</h4>
<p>vm打开，虚拟机跑起来：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pyhdfs import HdfsClient</span><br><span class="line">client = HdfsClient(hosts=&#x27;IP:50070&#x27;)</span><br><span class="line">Res = client.open(&#x27;/data/1.txt&#x27;)</span><br><span class="line">for lines in Res:</span><br><span class="line">    print(lines)</span><br></pre></td></tr></table></figure>
<p>失败，显示了主机名称和端口号，但无法连接上。</p>
<p>在网上搜了下，这里需要将各主机名与ip的映射加在本地机器的hosts里，例如我使用的时win10，就在<code> C:\Windows\System32\drivers\etc</code>下修改hosts。</p>
<p>改完后成功print出文本内容，试试copy到本地：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pyhdfs import HdfsClient</span><br><span class="line">client = HdfsClient(hosts=&#x27;IP:50070&#x27;)</span><br><span class="line">res = client.copy_to_local(&#x27;/data/1.txt&#x27;, &#x27;C:/Users/Aysamu/Desktop/1.txt&#x27;)</span><br></pre></td></tr></table></figure>
<p>在桌面看到1.txt，成功！</p>
<h4 id="二、云端访问">二、云端访问</h4>
<p>这里尝试访问阿里上的hdfs时，我发现半年前我搭建的hadoop环境并不完整😥，理所当然的无法通过pyhdfs访问，如mapreduce之类的测试都跑不通，就顺便修缮了一下，下面我给出修改后的配置。</p>
<p><em><strong><font color="red">（注意，这里各主机的hosts内映射需按照“本机对应内网ip，他机对应公网ip”来填写，在本地机器中，直接填各主机的公网ip即可。）</font></strong></em></p>
<p>core-site.xml:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://aysamu:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!-- 指定 hadoop 运行时产生文件的存储路径 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/root/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<p>yarn-site.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">&lt;value&gt;aysamu&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;description&gt;YARN 集群为 MapReduce 程序提供的 shuffle 服务&lt;/description&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;aysamu:8032&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;aysamu:8030&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;aysamu:8031&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;aysamu:8033&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;aysamu:8088&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.pmem-check-enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<p>mapred-site.xml.template：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line"> &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line"> &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<p><strong>记得<code>cp mapred-site.xml.template mapred-site.xml</code>，我在8088端口看不到进程就是忘记了它（＞人＜；）</strong></p>
<p><em><strong><font style="color:yellow;font-size:35px">还有十分重要的一点！！！</font></strong></em></p>
<p><strong>在各节点的hosts中，将这一行注释掉！</strong></p>
<p><code>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</code></p>
<p><em>最后说一句，我爱python</em></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pyhdfs</tag>
        <tag>hadoop</tag>
        <tag>hdfs</tag>
      </tags>
  </entry>
  <entry>
    <title>避免网站被恶意反向代理</title>
    <url>/posts/1313d302.html</url>
    <content><![CDATA[<h2 id="关于如何避免网站被恶意反向代理">关于如何避免网站被恶意反向代理</h2>
<p>前几天向百度提交了链接，早上在百度里尝试搜索自己网页内容时，发现了几个内容与我完全相同，但域名完全不认识的网站。在站长平台查询这几个域名后，果然是陌生的。经过提问和思考后，得知我的网站被人反向代理了。</p>
<span id="more"></span>
<h4 id="反向代理原理">反向代理原理</h4>
<p>正如我将域名映射到ip某端口下一样，有人将域名映射到了我的域名上。</p>
<h4 id="解决">解决</h4>
<p>确定了原因，那就好整了，我想起来之前弃用的“禁止ip访问”方案，主要是为了我自己方便，没有进行如此设置。</p>
<p>直接在nginx的配置文件里加入就可以了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">listen       80;</span><br><span class="line">server_name  aysamu.space;</span><br><span class="line">if ($host != &#x27;aysamu.space&#x27;)&#123;</span><br><span class="line">   return 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>网站安全</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>反向代理</tag>
      </tags>
  </entry>
  <entry>
    <title>鹅</title>
    <url>/posts/f1a75063.html</url>
    <content><![CDATA[<h2 id="鹅"><em><strong>鹅</strong></em></h2>
<p><em>耳边接连传来外婆的哀唱，</em></p>
<span id="more"></span>
<p><em>身旁陆续走过上前焚烧纸钱的宾客，</em></p>
<p><em>可我双目紧盯着老宅旁的破棚无从分心，</em></p>
<p><em>那三只鹅以二三一的顺序伸头嘎嘎，</em></p>
<p><em>让人很是好奇。</em></p>
]]></content>
      <categories>
        <category>写作</category>
        <category>诗</category>
      </categories>
      <tags>
        <tag>诗</tag>
        <tag>葬礼</tag>
      </tags>
  </entry>
</search>
